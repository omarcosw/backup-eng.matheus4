{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "espera evolution processar1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add na Memória1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "espera evolution processar imagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "camposIniciais1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaÁudio2": {
      "main": [
        [
          {
            "node": "Memória Inicial1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "espera evolution processar1": {
      "main": [
        [
          {
            "node": "transforma audio em binary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transforma audio em binario": {
      "main": [
        [
          {
            "node": "transcreve audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transforma audio em binary": {
      "main": [
        [
          {
            "node": "transforma audio em binario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcreve audio": {
      "main": [
        [
          {
            "node": "empilhaÁudio2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UnificaDados1": {
      "main": [
        [
          {
            "node": "getClient2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp.5": {
      "main": [
        [
          {
            "node": "UnificaDados1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Prompts1": {
      "main": [
        [
          {
            "node": "UnificaDados1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Segmentos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Responde texto1": {
      "main": [
        [
          {
            "node": "1,2s1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "NoOp.1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Responde texto1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "converte imagem1": {
      "main": [
        [
          {
            "node": "transcreve imagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcreve imagem1": {
      "main": [
        [
          {
            "node": "empilhaÁudio3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "espera evolution processar imagem1": {
      "main": [
        [
          {
            "node": "Busca imagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaÁudio3": {
      "main": [
        [
          {
            "node": "Memória Inicial1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca imagem1": {
      "main": [
        [
          {
            "node": "converte imagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add na Memória1": {
      "main": [
        [
          {
            "node": "Memória Inicial1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Espere1": {
      "main": [
        [
          {
            "node": "Memória Final1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Memória Inicial1": {
      "main": [
        [
          {
            "node": "Espere1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Memória Final1": {
      "main": [
        [
          {
            "node": "Concatena Mensagens1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Concatena Mensagens1": {
      "main": [
        [
          {
            "node": "Compara Memórias1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Memórias1": {
      "main": [
        [
          {
            "node": "Limpar Memória2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limpar Memória2": {
      "main": [
        [
          {
            "node": "UserMessage1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UserMessage1": {
      "main": [
        [
          {
            "node": "messagess",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "messagess": {
      "main": [
        [
          {
            "node": "IA SUPORTE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "searchaulas": {
      "ai_tool": [
        [
          {
            "node": "IA SUPORTE",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "busca_aluno": {
      "main": [
        [
          {
            "node": "telefone existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "telefone existe?": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CreateUser": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "busca_aluno",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GERA_sessionid",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getClient2": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Memoria": {
      "ai_memory": [
        [
          {
            "node": "IA SUPORTE",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "IA SUPORTE": {
      "main": [
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Suporte": {
      "ai_languageModel": [
        [
          {
            "node": "IA SUPORTE",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings": {
      "ai_embedding": [
        [
          {
            "node": "searchaulas",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Reranker": {
      "ai_reranker": [
        [
          {
            "node": "searchaulas",
            "type": "ai_reranker",
            "index": 0
          }
        ]
      ]
    },
    "GERA_sessionid": {
      "main": [
        [
          {
            "node": "CreateUser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "getClient2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Prompts1",
            "type": "main",
            "index": 0
          },
          {
            "node": "NoOp.5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "camposIniciais1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-23T18:05:17.351Z",
  "id": "FJa2E2im5rrU2kLT",
  "isArchived": true,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[IA] SUPORTE",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "suportesorveteiro",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3020,
        520
      ],
      "id": "9ec19ac0-45da-434a-9f2c-71e98f023308",
      "name": "Webhook",
      "webhookId": "7d1ee740-2fda-4cfb-87e9-44e385849491"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0cb14635-2673-408e-86db-ce9e0373674b",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "60065893-74f7-4b64-bc1a-d891202efa78",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            }
          ]
        },
        "options": {}
      },
      "id": "09cc2ebc-7f6b-4c52-a636-dae4ec091d10",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        240,
        340
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 1 - CREDENCIAIS, DADOS",
        "height": 374,
        "width": 1295,
        "color": 7
      },
      "id": "71542900-e172-4638-82c7-bd2b9fda86e1",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3080,
        380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9ecf2fc-da2c-4f44-897a-5dc0a2f2f379",
              "name": "meta.telefoneCliente",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"remoteJid\"] }}",
              "type": "string"
            },
            {
              "id": "a019046c-3b5a-4fd0-a497-de55cb2178ea",
              "name": "meta.telefoneEmpresa",
              "value": "={{ $json.body.sender }}",
              "type": "string"
            },
            {
              "id": "dab7ca54-c3d2-4a36-a9ca-a0ebbd375ef5",
              "name": "meta.nomeCliente",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "01238a36-6907-4aec-ab21-26345ed5fc96",
              "name": "whatsapp.evo.nomeInstancia",
              "value": "={{ $json.body.instance || null }}",
              "type": "string"
            },
            {
              "id": "81612acf-1b66-4c8e-82e4-ce8c77b31334",
              "name": "content.mensagem",
              "value": "={{ \n  $json.body?.content || \n\n  $json.body?.data?.message?.extendedTextMessage?.text || \n  $json.body?.data?.message?.imageMessage?.caption || \n  $json.body?.data?.message?.conversation || \n  $json?.message?.text || \n  $json?.message?.caption || \n  null \n}}",
              "type": "string"
            },
            {
              "id": "cc7dcfe1-8ad7-4fe8-93ec-8f643c7d08c7",
              "name": "content.tipoMensagem",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "2dfc64f4-b222-4ea7-b095-fdd96d9fcb95",
              "name": "content.idMensagem",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "9d947263-3b68-4c63-88ba-ef1b9de22571",
              "name": "empresa.nomeEmpresa",
              "value": "Danilo Meidas",
              "type": "string"
            },
            {
              "id": "076ad2d4-b8ea-440f-9c02-f7e8417a984d",
              "name": "whatsapp.evo.apikey",
              "value": "={{ $json.body.apikey || null }}",
              "type": "string"
            },
            {
              "id": "0c237725-0428-4f1d-bddf-41bd289b3168",
              "name": "whatsapp.evo.server_url",
              "value": "={{ $json.body.server_url || null }}",
              "type": "string"
            },
            {
              "id": "255b9c45-7769-4d09-9c50-61dcdfb7c09d",
              "name": "app.debouncerTime",
              "value": "8",
              "type": "string"
            },
            {
              "id": "196aeb96-5c33-4dd7-9a4f-6bd40765b7fb",
              "name": "doc.id",
              "value": "1Yo4wzv6EnwnjZJ_Ou1dTkKsuA8iDp1xZfADxqAm62LA",
              "type": "string"
            },
            {
              "id": "fc7c5c8f-b505-4a43-ae07-51eea58d6f80",
              "name": "linkPreview",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "e30bbf8c-d5da-4410-b875-8dfe4b301798",
              "name": "Digitando",
              "value": 2400,
              "type": "number"
            },
            {
              "id": "c4f557bd-72f1-4507-8d9d-c2a590eea2b8",
              "name": "content.quoted",
              "value": "={{ $json.body.data.message.conversation }}\n{{ $json.body.data.message.imageMessage.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "465d5c52-f6bb-46a1-a50f-ea8d43218c91",
      "name": "camposIniciais1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2580,
        520
      ],
      "notesInFlow": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais1').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('Webhook').item.json.body.data.message.speechToText, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais1').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "ac6557c0-fc70-4e15-9c89-ae03fc8e3b1a",
      "name": "empilhaÁudio2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1120,
        -40
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## PASSO 4 - DEFINE O TIPO DE MENSAGEM E ORGANIZA PARA O AGENTE",
        "height": 1034,
        "width": 1915,
        "color": 3
      },
      "id": "4eeaf4ca-399f-4433-ad5a-3802c050c303",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        200,
        -140
      ]
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "02cf919c-b94b-461a-bb1c-10dad047c0fa",
      "name": "espera evolution processar1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        440,
        -40
      ],
      "webhookId": "8ae10f5c-5f7c-4288-b75d-e3d415e5798c"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "={{ $json.mediaType }}",
          "mimeType": "=audio/ogg"
        }
      },
      "id": "03feaf4c-98ef-4f7b-8f3f-550f1ee743e3",
      "name": "transforma audio em binario",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        760,
        -40
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais1').item.json.whatsapp.evo.server_url }}/chat/getBase64FromMediaMessage/{{ $item(\"0\").$node[\"camposIniciais1\"].json[\"whatsapp\"][\"evo\"][\"nomeInstancia\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $item(\"0\").$node[\"camposIniciais1\"].json[\"whatsapp\"][\"evo\"][\"apikey\"] }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"message\": {\n        \"key\": {\n            \"id\": \"{{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"id\"] }}\"\n        }\n    },\n    \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "f34e51f5-85a7-4f46-8613-308c6fb6af9a",
      "name": "transforma audio em binary",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        600,
        -40
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        940,
        -40
      ],
      "id": "2aa53ce3-6b80-40d0-a3a8-8bc9edf415fd",
      "name": "transcreve audio",
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "ac902941-0172-4c01-bba0-d7bfd7d97ff8",
      "name": "UnificaDados1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -1940,
        520
      ],
      "notesInFlow": true,
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "4b9ceb58-8a58-4762-aa07-76594adc376f",
      "name": "NoOp.5",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2160,
        600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "aa4d5d29-e6f1-4bce-b5ff-4575b553a077",
              "name": "systemMessageAgente",
              "value": "=<agent>\n  <identity>\n    <name>Danilo Meidas</name>\n    <persona>mentor direto, caloroso e humano</persona>\n    <presentation>\n      oi {{(() => {\n        const nome = $('camposIniciais1').item.json.meta.nomeCliente;\n        return nome.split(' ')[0];\n      })()}}, aqui é o danilo meidas. este é meu contato pessoal, já salva aí. tamo junto.\n    </presentation>\n    <conceal_identity>true</conceal_identity>\n  </identity>\n\n  <start_message>\n    <auto_intro>\n      {{ new Date().getHours() < 12 ? 'bom dia' : (new Date().getHours() < 18 ? 'boa tarde' : 'boa noite') }}, tudo certo? {{(() => {\n        const nome = $('camposIniciais1').item.json.meta.nomeCliente;\n        return nome.split(' ')[0];\n      })()}} sou da equipe do danilo. danilo está à disposição. como posso ajudar?\n    </auto_intro>\n  </start_message>\n\n  <!-- REGRA CRÍTICA E INDISPENSÁVEL -->\n  <critical_mandatory_rule>\n    NUNCA RESPONDER DÚVIDAS SEM CONSULTAR A FERRAMENTA \"searchaulas\"\n    sempre consultar tool/\"searchaulas\" antes de cada resposta\n    nunca inventar ou improvisar nenhuma resposta — todas as informações devem vir da busca em \"searchaulas\"\n    sempre que uma imagem for enviada, acionar tool/\"searchaulas\" automaticamente e basear a resposta no conteúdo encontrado\n    <enforcement>100% das interações</enforcement>\n  </critical_mandatory_rule>\n\n  <!-- EXEMPLOS NEGATIVOS - O QUE NUNCA FAZER -->\n  <negative_examples>\n    <example1>\n      <user>como faço a receita X?</user>\n      <wrong_response>vou consultar e te respondo...</wrong_response>\n      <correct_response>antes de ajudar, preciso consultar o conteúdo do curso. deixe-me buscar as informações.</correct_response>\n    </example1>\n    <example2>\n      <user>tenho uma dúvida urgente sobre a aula</user>\n      <wrong_response>claro, qual sua dúvida?</wrong_response>\n      <correct_response>um momento, vou verificar no nosso banco de dados e já volto com a resposta.</correct_response>\n    </example2>\n    <example3>\n      <user>me indique a próxima etapa do curso</user>\n      <wrong_response>posso te ajudar com isso.</wrong_response>\n      <correct_response>vou buscar no nosso sistema qual é o próximo módulo e te respondo em instantes.</correct_response>\n    </example3>\n  </negative_examples>\n\n  <!-- MAPEAMENTO DAS PERGUNTAS COM AÇÃO OBRIGATÓRIA -->\n  <ConsultasAulas>\n    <pre_condition>SOMENTE APÓS O INÍCIO DA CONVERSA</pre_condition>\n    <Item tipo=\"pergunta de aluno sobre conteúdo de aula\">\n      <Acao tool=\"searchaulas\" finalidade=\"consultar conteúdo oficial no banco de dados antes de responder\" />\n    </Item>\n    <Item tipo=\"dúvida técnica sobre aulas, vídeos, receitas ou práticas do curso\">\n      <Acao tool=\"searchaulas\" finalidade=\"buscar informações precisas e atualizadas\" />\n    </Item>\n    <Item tipo=\"qualquer solicitação relacionada a conteúdo programático, técnica ensinada ou dúvida de aplicação\">\n      <Acao tool=\"searchaulas\" finalidade=\"verificar a fonte oficial do curso\" />\n    </Item>\n  </ConsultasAulas>\n\n  <behaviors>\n    <donts>\n      NUNCA RESPONDER DÚVIDAS SEM CONSULTAR tool/\"searchaulas\"\n      NUNCA INVENTAR OU IMPROVISAR NENHUMA RESPOSTA\n      NUNCA USAR MAIÚSCULAS — escreva tudo em minúsculas\n      NUNCA USAR EMOJIS\n      NUNCA SE APRESENTAR COMO ROBÔ OU IA\n      NUNCA ESQUECER DE ADAPTAR A RESPOSTA AO NÍVEL DO ALUNO\n      NUNCA ESCREVER TEXTOS LONGOS — seja breve e direto\n    </donts>\n\n    <critical_repeats>\n      SEMPRE CONSULTAR tool/\"searchaulas\" ANTES DE RESPONDER\n      NUNCA INVENTAR OU IMPROVISAR NENHUMA RESPOSTA\n      MENSAGENS SEMPRE EM MINÚSCULAS\n      NUNCA USAR EMOJIS\n      NUNCA SE APRESENTAR COMO IA\n      RESPOSTAS BREVES E DIRETAS — sem textos longos\n    </critical_repeats>\n  </behaviors>\n\n  <final_touch>\n    <close_messages>\n      bóra pra cima  \n      não tem como dar errado se fizer do jeito certo  \n      conta comigo sempre  \n      tô aqui à disposição\n    </close_messages>\n  </final_touch>\n</agent>\n",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "99ec70ec-1793-4bf5-b129-7c55a606e465",
      "name": "Prompts1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2160,
        420
      ],
      "alwaysOutputData": false,
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do WhatsApp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- _itálico_ (extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, deve ser exibido limpo e direto, **sem texto descritivo ou âncoras**, usando somente o domínio puro como: `https://link.com.br/exemplo`\n\n❗ Nunca use markdown no estilo `[texto](link)` ou `Texto (link)`, apenas o link puro.\n\nSe detectar um link com o padrão `www.pay.hotmart.com`, corrija automaticamente para `pay.hotmart.com`, pois o domínio com www não funciona."
            }
          ]
        }
      },
      "id": "ac7e63ef-f413-4ae2-9ef1-f4c3bbdde78b",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        3360,
        320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais1').item.json.whatsapp.evo.server_url }}/message/sendText/{{ $('camposIniciais1').item.json.whatsapp.evo.nomeInstancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('camposIniciais1').item.json.whatsapp.evo.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('camposIniciais1').item.json.meta.telefoneCliente }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            },
            {
              "name": "linkPreview",
              "value": "={{ $('camposIniciais1').item.json.linkPreview }}"
            },
            {
              "name": "delay",
              "value": "={{ $('camposIniciais1').item.json.Digitando }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "ea8f0793-08a8-483a-9847-f7a2e3904eaa",
      "name": "Responde texto1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4360,
        420
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "e33a2a3a-9bad-4d10-a487-966cce0f1094",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3580,
        520
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "62dea155-8dca-4562-b051-c27d4f25cf40",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3980,
        320
      ]
    },
    {
      "parameters": {
        "amount": 1.2
      },
      "id": "a84c7599-40f8-4044-8d2b-a8d811f731f7",
      "name": "1,2s1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4540,
        560
      ],
      "webhookId": "e5987401-8b77-4a84-8693-25fd8898cd94"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "8961084f-b4e9-44b4-a906-e9e69c532af0",
      "name": "Segmentos1",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        3760,
        320
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "40e4b85d-70f8-4cfa-9b01-5ae76d92846b",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3380,
        520
      ],
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "content": "## PASSO 5 - ",
        "height": 754,
        "width": 1035,
        "color": 7
      },
      "id": "8bc6eb12-ff60-4a67-ab84-ce9c35414a10",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2180,
        160
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 6 - ",
        "height": 670,
        "width": 1447,
        "color": 3
      },
      "id": "e7c52ec9-e208-4a57-adf5-da9387a98cd0",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3300,
        160
      ]
    },
    {
      "parameters": {},
      "id": "dd7aa153-97f0-4009-8c40-84a882335d24",
      "name": "NoOp.1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4200,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7ed86f5e-fe26-45b2-ad31-3d42e43a5b82",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4140,
        420
      ],
      "id": "55d36195-6f37-4de4-aee1-e53d8365ebd2",
      "name": "If2"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {}
      },
      "id": "35d4f674-482e-4e97-a749-dbb8bd60c649",
      "name": "converte imagem1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        680,
        680
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=<image_analyzer>\n  <identity>\n    <name>analisador visual</name>\n    <persona>analista técnico e detalhista</persona>\n    <style>objetivo, claro e direto</style>\n  </identity>\n  \n  <behaviors>\n    <analysis_flow>\n      <step1>identificar elementos principais da imagem</step1>\n      <step2>descrever contexto e ambiente</step2>\n      <step3>notar detalhes relevantes</step3>\n      <step4>acionar tool \"aulas\" para contexto adicional</step4>\n      <step5>fornecer análise completa e precisa</step5>\n    </analysis_flow>\n    \n    <donts>\n      <rule>nunca inventar elementos que não estão na imagem</rule>\n      <rule>nunca fazer suposições além do visível</rule>\n      <rule>nunca usar termos técnicos desnecessários</rule>\n      <rule>nunca ignorar elementos importantes</rule>\n      <rule>nunca responder sem consultar a ferramenta \"aulas\"</rule>\n    </donts>\n    \n    <critical_rule>\n      ⚠️ sempre acionar a ferramenta tool/\"aulas\" antes de enviar qualquer resposta para garantir informações corretas e eficazes\n    </critical_rule>\n    \n    <response_format>\n      <tone>profissional mas acessível</tone>\n      <structure>organizada e hierárquica</structure>\n      <detail_level>completo mas conciso</detail_level>\n    </response_format>\n  </behaviors>\n  \n  <output_rules>\n    <mandatory>consultar tool \"aulas\" → analisar imagem → resposta contextualizada</mandatory>\n    <format>descrição objetiva com base no conhecimento das aulas</format>\n  </output_rules>\n</image_analyzer>",
        "inputType": "base64",
        "options": {}
      },
      "id": "82318a73-eb32-4c20-8c51-b2cbd12b7e41",
      "name": "transcreve imagem1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        840,
        680
      ],
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "fa23fb58-6e1e-4dc5-b954-922b3c6bfb2f",
      "name": "espera evolution processar imagem1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        360,
        660
      ],
      "webhookId": "276b709f-7d4b-4233-9e69-254f25485c76"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais1').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('Webhook').item.json.body.data.message.speechToText, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais1').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "7465dd2a-f917-4449-a6e3-3ba6754da46d",
      "name": "empilhaÁudio3",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1040,
        680
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais1').item.json.whatsapp.evo.server_url }}/chat/getBase64FromMediaMessage/{{ $item(\"0\").$node[\"camposIniciais1\"].json[\"whatsapp\"][\"evo\"][\"nomeInstancia\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $item(\"0\").$node[\"camposIniciais1\"].json[\"whatsapp\"][\"evo\"][\"apikey\"] }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"message\": {\n        \"key\": {\n            \"id\": \"{{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"id\"] }}\"\n        }\n    },\n    \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "606b4f79-d34f-4f96-b60a-3f9d295f5d8f",
      "name": "Busca imagem1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        480,
        660
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $item(\"0\").$node[\"camposIniciais1\"].json[\"meta\"][\"telefoneCliente\"] }}",
        "messageData": "={{ $item(\"0\").$node[\"camposIniciais1\"].json[\"content\"][\"mensagem\"] }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        580,
        320
      ],
      "id": "4348433b-95f2-489e-bef0-0d9e903444d4",
      "name": "Add na Memória1",
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        980,
        320
      ],
      "id": "facdc9ff-989b-45a1-9959-4e431c02727d",
      "name": "Espere1",
      "webhookId": "5efbac78-7c17-44b9-92cc-c3078c79f8d8"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Memória Inicial",
        "key": "={{ $item(\"0\").$node[\"camposIniciais1\"].json[\"meta\"][\"telefoneCliente\"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        760,
        320
      ],
      "id": "d3ea331c-f829-42e6-87d2-69fb3729e544",
      "name": "Memória Inicial1",
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Memória Final",
        "key": "={{ $item(\"0\").$node[\"camposIniciais1\"].json[\"meta\"][\"telefoneCliente\"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1160,
        320
      ],
      "id": "df1a8d3c-20d0-4912-9274-9bf45b4e1682",
      "name": "Memória Final1",
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Acesse os arrays das variáveis\nconst memoriaInicialArray = $('Memória Inicial1').all()[0].json['Memória Inicial'];\nconst memoriaFinalArray = $json['Memória Final'];\n\n// Verifique se as variáveis são arrays e junte os elementos em strings\nconst memoriaInicial = Array.isArray(memoriaInicialArray) ? memoriaInicialArray.join(' ') : '';\nconst memoriaFinal = Array.isArray(memoriaFinalArray) ? memoriaFinalArray.join(' ') : '';\n\n// Retorne as variáveis resultantes\nreturn {\n  memoriaInicial,\n  memoriaFinal\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1380,
        320
      ],
      "id": "c56d24d2-d2c3-40ca-8e4d-b77783d9c9d9",
      "name": "Concatena Mensagens1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fbe500bb-8a66-4f0c-93df-9631e3bdabfc",
              "leftValue": "={{ $('Concatena Mensagens1').all()[0].json.memoriaInicial }}",
              "rightValue": "={{ $('Concatena Mensagens1').all()[0].json.memoriaFinal }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1560,
        320
      ],
      "id": "69f6b81f-548f-4a0f-b8b3-762ae283bf5d",
      "name": "Compara Memórias1"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $item(\"0\").$node[\"camposIniciais1\"].json[\"meta\"][\"telefoneCliente\"] }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1740,
        320
      ],
      "id": "5237c7dd-8db1-4a52-836d-1871063a96c1",
      "name": "Limpar Memória2",
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "18e16067-bcdb-4bda-9c22-e1869c550af6",
              "name": "userMessage",
              "value": "={{ $('Compara Memórias1').all()[0].json.memoriaFinal }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1960,
        320
      ],
      "id": "61750274-b6b9-4955-9641-a59a768dd68c",
      "name": "UserMessage1"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "searchaulas",
        "toolDescription": "Sempre acione essa função tool para todos os assuntos e duvidas do curso \"Profissão Sorveteiro\"",
        "tableName": {
          "__rl": true,
          "value": "ps_curso",
          "mode": "list",
          "cachedResultName": "ps_curso"
        },
        "topK": 20,
        "useReranker": true,
        "options": {
          "queryName": "match_ps_curso"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.2,
      "position": [
        2840,
        520
      ],
      "id": "c9b4a8d5-7577-427f-b8ae-421e8a0f0bdc",
      "name": "searchaulas",
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7158aa0-84e0-44b1-8629-bf23fb4c0766",
              "name": "=messages",
              "value": "={{ (() => {\n  let messages = '';\n  let quoted = '';\n  let empilha = '';\n  let transcricaoImagem = '';\n  \n  // Primeira parte: join de mensagens\n  try {\n    messages = $json.message.map(buffer => JSON.parse(buffer).message).join('\\n');\n  } catch (e) {\n    messages = '';\n  }\n  \n  // Segunda parte: conteúdo citado (quoted)\n  try {\n    quoted = $('camposIniciais1').item.json.content?.quoted || '';\n  } catch (e) {\n    quoted = '';\n  }\n  \n  // Terceira parte: verificar empilhaÁudio se foi executado\n  try {\n    empilha = $node[\"empilhaÁudio2\"]?.json?.text || '';\n  } catch (e) {\n    empilha = '';\n  }\n  \n  // Quarta parte: buscar transcrição da imagem\n  try {\n    transcricaoImagem = $('transcreve imagem1').item.json.content || '';\n  } catch (e) {\n    transcricaoImagem = '';\n  }\n  \n  // Juntar tudo e remover links do WhatsApp do resultado final\n  let resultado = [messages, quoted, empilha, transcricaoImagem].filter(Boolean).join('\\n\\n');\n  \n  // Remove qualquer link do WhatsApp do resultado final\n  resultado = resultado.replace(/https:\\/\\/mmg\\.whatsapp\\.net\\/[^\\s\\n]+/g, '').trim();\n  \n  // Remove múltiplas quebras de linha consecutivas que podem ter ficado após remover o link\n  resultado = resultado.replace(/\\n\\n+/g, '\\n\\n').trim();\n  \n  return resultado;\n})() }}",
              "type": "string"
            },
            {
              "id": "ef9e44ec-6f77-43c0-868f-7b43bc3007a4",
              "name": "sessionid",
              "value": "={{ $('getClient2').item.json.sessionid }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2dc1c167-9a39-4fc7-90d8-361332e58fb8",
      "name": "messagess",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        320
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 3 - Verificação se é aluno ou não",
        "height": 374,
        "width": 647,
        "color": 7
      },
      "id": "3ac980cf-09ad-426d-9827-f807cce15fec",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -620,
        280
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "conversoes",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('camposIniciais1').item.json.meta.telefoneCliente.replace('@s.whatsapp.net', '') }}"
            }
          ]
        }
      },
      "id": "8fcd238f-a244-4160-b1f8-3137f9db6fcc",
      "name": "busca_aluno",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -560,
        340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9113a78a-fafc-4b02-a76f-02904e4cce51",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7d3b3417-4264-4959-8155-a0ce9a90b5c8",
      "name": "telefone existe?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -400,
        340
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 2 - CRIA USUÁRIO NO BANCO DE DADOS SUPABASE",
        "height": 650,
        "width": 1023,
        "color": 3
      },
      "id": "25735067-1ea5-400f-9562-6bd72cd46338",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1720,
        260
      ]
    },
    {
      "parameters": {
        "tableId": "atendimento_suporte",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $('camposIniciais1').item.json.meta.nomeCliente }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('camposIniciais1').item.json.meta.telefoneCliente.replace('@s.whatsapp.net', '') }}"
            },
            {
              "fieldId": "idmensagem",
              "fieldValue": "={{ $('camposIniciais1').item.json.content.idMensagem }}"
            },
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $json.data }}"
            }
          ]
        }
      },
      "id": "0e7a38ce-a306-467e-851f-8a5db4b16df3",
      "name": "CreateUser",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1060,
        660
      ],
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4e77cc7c-48f4-4cbe-94e7-6d211db67002",
              "leftValue": "={{ $('getClient2').item.json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9dc70597-a1a7-4a48-9abd-fc6ba06079eb",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1440,
        540
      ]
    },
    {
      "parameters": {
        "content": "### - Verifica se já existe um cliente cadastrado\n\n### - Se sim, prossegue o fluxo\n\n### - Se não, cria um cliente e um id do chat e prossegue o fluxo",
        "width": 660,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1700,
        320
      ],
      "typeVersion": 1,
      "id": "8496fc69-f356-48dd-8682-125d7515ae6f",
      "name": "Sticky Note27"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "atendimento_suporte",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Code').item.json.meta.telefoneCliente }}"
            }
          ]
        }
      },
      "id": "4b7b8f7d-f976-4d8b-9a02-95831dc49332",
      "name": "getClient2",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1680,
        540
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://webhook.sorveteiroraiz.com/webhook/verifica",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "telefone",
              "value": "={{ $('camposIniciais1').item.json.meta.telefoneCliente }}"
            },
            {
              "name": "sessionid",
              "value": "={{ $('getClient2').item.json.sessionid }}"
            },
            {
              "name": "nomeCliente",
              "value": "={{ $('camposIniciais1').item.json.meta.nomeCliente }}"
            },
            {
              "name": "nomeInstancia",
              "value": "={{ $('camposIniciais1').item.json.whatsapp.evo.nomeInstancia }}"
            },
            {
              "name": "apikey",
              "value": "={{ $('camposIniciais1').item.json.whatsapp.evo.apikey }}"
            },
            {
              "name": "server_url",
              "value": "={{ $('camposIniciais1').item.json.whatsapp.evo.server_url }}"
            },
            {
              "name": "mensagem",
              "value": "={{ $('camposIniciais1').item.json.content.mensagem }}"
            },
            {
              "name": "tipoMensagem",
              "value": "={{ $('camposIniciais1').item.json.content.tipoMensagem }}"
            },
            {
              "name": "idMensagem",
              "value": "={{ $('camposIniciais1').item.json.content.idMensagem }}"
            },
            {
              "name": "limkpreview",
              "value": "={{ $('camposIniciais1').item.json.linkPreview }}"
            },
            {
              "name": "Digitando",
              "value": "={{ $('camposIniciais1').item.json.Digitando }}"
            },
            {
              "name": "debouncerTime",
              "value": "={{ $('camposIniciais1').item.json.app.debouncerTime }}"
            },
            {
              "name": "tipodeMensagem",
              "value": "={{ $('Webhook').item.json.body.data.messageType }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -180,
        440
      ],
      "id": "c957d054-3e37-4e53-bb8a-866ec1505426",
      "name": "Envia para IA de verificação"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('messagess').item.json.sessionid }}",
        "contextWindowLength": 10
      },
      "id": "97207e7b-920d-4ef8-b862-01d365c88131",
      "name": "Memoria",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        2400,
        520
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messagess').all()[0].json.messages }}",
        "options": {
          "systemMessage": "=<IAConfig>\n\n  <Segurança>\n    <Regra>⚠️ NUNCA responder dúvidas sem consultar a ferramenta \"searchaulas\".</Regra>\n    <Regra>⚠️ Sempre consultar \"searchaulas\" antes de responder qualquer pergunta.</Regra>\n    <Regra>⚠️ Nunca inventar, improvisar ou deduzir respostas — tudo deve vir do conteúdo oficial via \"searchaulas\".</Regra>\n    <Regra>⚠️ Quando uma imagem for enviada, acionar automaticamente a tool \"searchaulas\" e basear a resposta nela.</Regra>\n    <Regra>⚠️ Nunca usar letras maiúsculas. Sempre escreva em minúsculas.</Regra>\n    <Regra>⚠️ Nunca usar emojis.</Regra>\n    <Regra>⚠️ Nunca se apresentar como robô ou IA.</Regra>\n    <Regra>⚠️ Nunca esquecer de adaptar a resposta ao nível do aluno.</Regra>\n    <Regra>⚠️ Nunca escrever textos longos — seja breve e direto.</Regra>\n  </Segurança>\n\n  <ObjetivoFinal>Guiar e apoiar o aluno com respostas curtas, precisas e baseadas exclusivamente no conteúdo oficial do curso.</ObjetivoFinal>\n\n  <Persona>\n    <Nome>Dani</Nome>\n    <Tom>mentor direto, caloroso, humano</Tom>\n    <Evitar>maiúsculas, emojis, formalismos, improvisos, respostas longas, tom robótico</Evitar>\n    <Foco>clareza, confiança, precisão, apoio humano, brevidade</Foco>\n  </Persona>\n\n  <Produto>\n    <ConsultaViaTool>⚠️ Todas as respostas devem vir da tool \"searchaulas\".</ConsultaViaTool>\n  </Produto>\n\n  <Pagamento>\n    <ConsultaViaNode>⚠️ Este fluxo não trata de informações financeiras.</ConsultaViaNode>\n  </Pagamento>\n\n  <Condicionais>\n    <Se test=\"imagem_recebida\">\n      <Acao tool=\"searchaulas\" finalidade=\"analisar conteúdo da imagem e buscar a resposta correta\" />\n    </Se>\n  </Condicionais>\n\n  <Objeções>\n    <!-- Aqui não há objeções estruturadas como no primeiro XML, então omitido -->\n  </Objeções>\n\n  <Fechamento>\n    <CTA>posso te ajudar com mais alguma dúvida do curso?</CTA>\n    <MensagemFinal>bóra pra cima | não tem como dar errado se fizer do jeito certo | conta comigo sempre | tô aqui à disposição</MensagemFinal>\n  </Fechamento>\n\n  <ReforçoFinal>\n    <Regra>⚠️ Nunca responda sem consultar \"searchaulas\".</Regra>\n    <Regra>⚠️ Nunca improvise ou invente conteúdo — tudo vem da fonte oficial.</Regra>\n    <Regra>⚠️ Nunca use emojis, maiúsculas ou textos longos.</Regra>\n    <Regra>⚠️ Nunca se apresente como robô ou IA.</Regra>\n    <Regra>⚠️ Respostas sempre adaptadas ao nível do aluno, curtas e humanas.</Regra>\n  </ReforçoFinal>\n\n  <ConsultasAulas>\n    <pre_condition>SOMENTE APÓS O INÍCIO DA CONVERSA</pre_condition>\n    <Item tipo=\"pergunta de aluno sobre conteúdo de aula\">\n      <Acao tool=\"searchaulas\" finalidade=\"consultar conteúdo oficial no banco de dados antes de responder\" />\n    </Item>\n    <Item tipo=\"dúvida técnica sobre aulas, vídeos, receitas ou práticas do curso\">\n      <Acao tool=\"searchaulas\" finalidade=\"buscar informações precisas e atualizadas\" />\n    </Item>\n    <Item tipo=\"qualquer solicitação relacionada a conteúdo programático, técnica ensinada ou dúvida de aplicação\">\n      <Acao tool=\"searchaulas\" finalidade=\"verificar a fonte oficial do curso\" />\n    </Item>\n  </ConsultasAulas>\n\n</IAConfig>\n"
        }
      },
      "id": "e371132b-7aaa-45da-a509-3ec964a6b0d1",
      "name": "IA SUPORTE",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        2580,
        320
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e0956915-d3b7-462e-8abf-c2b179c6faeb",
      "name": "Suporte",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2220,
        520
      ],
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        2840,
        700
      ],
      "id": "38a28bbb-2b67-4237-8ef4-dd71cc99c86b",
      "name": "Embeddings",
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.rerankerCohere",
      "typeVersion": 1,
      "position": [
        3040,
        700
      ],
      "id": "3fe645ff-9ff8-4324-8adb-56ba583180b5",
      "name": "Reranker",
      "credentials": {
        "cohereApi": {
          "id": "A7tX1jXD2d5wRh1M",
          "name": "CohereApi account"
        }
      }
    },
    {
      "parameters": {
        "action": "generate"
      },
      "id": "35375d44-16a0-4a2f-87c9-44c2064499fc",
      "name": "GERA_sessionid",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -1260,
        660
      ],
      "notesInFlow": false
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -880,
        660
      ],
      "id": "beebba76-d136-4561-8a42-199f4371f462",
      "name": "Wait",
      "webhookId": "919316bc-aa69-4058-a025-5a422033edfd"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const data = item.json;\n\n  if (data.meta?.telefoneCliente) {\n    data.meta.telefoneCliente = data.meta.telefoneCliente.replace('@s.whatsapp.net', '');\n  }\n\n  if (data.meta?.telefoneEmpresa) {\n    data.meta.telefoneEmpresa = data.meta.telefoneEmpresa.replace('@s.whatsapp.net', '');\n  }\n\n  return { json: data };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2400,
        520
      ],
      "id": "66431f2a-373e-4796-8f1d-ecb5b3858a77",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2db4fa36-c506-4e4c-9f74-8ebe506d96cf",
              "leftValue": "={{ $json.body.data.key.remoteJid.replace('@s.whatsapp.net', '') }}",
              "rightValue": "5511984151865",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2820,
        520
      ],
      "id": "8ac78c42-161c-4c0a-ba9b-1a0fa20734f2",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "conversoes",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "="
            }
          ]
        }
      },
      "id": "8190dcfc-6142-4e37-b6a9-1638d64307c0",
      "name": "busca_aluno1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1040,
        1380
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=4ff767da-6cd3-47e9-8809-f20acd85e933"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -240,
        1280
      ],
      "id": "7ca37f59-f1ab-4cab-9d76-21cbc1a7e382",
      "name": "Limpar Memória",
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "webhook.sorveteiroraiz.com",
            "user-agent": "axios/1.7.9",
            "content-length": "974",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "webhook.sorveteiroraiz.com",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "aae19483bb9a",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "suporte",
            "data": {
              "key": {
                "remoteJid": "5511984151865@s.whatsapp.net",
                "fromMe": false,
                "id": "3EB0FD1815F548839EC190"
              },
              "pushName": "Higor Leite",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "pode tentar denovo por favor",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "e1vKR32lUxcFiQ==",
                    "senderTimestamp": "1753444305",
                    "senderAccountType": "E2EE",
                    "receiverAccountType": "E2EE",
                    "recipientKeyHash": "AlobDTujGTUGIw==",
                    "recipientTimestamp": "1750886680"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "1K4J4wwUdiT2aRDjqinfLYwm6FcYgLdQfnwiVLhOI9k="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1753471938,
              "instanceId": "5f3e44b6-90fb-420f-926b-1f8a34a111a6",
              "source": "web"
            },
            "destination": "https://webhook.sorveteiroraiz.com/webhook/suportesorveteiro",
            "date_time": "2025-07-25T16:32:18.263Z",
            "sender": "5512982654663@s.whatsapp.net",
            "server_url": "https://evolution.sorveteiroraiz.com",
            "apikey": "3751324729B8-4D02-9658-03B6F6C3F54F"
          },
          "webhookUrl": "https://webhook.sorveteiroraiz.com/webhook/suportesorveteiro",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-07-03T16:02:09.110Z",
      "updatedAt": "2025-07-03T16:02:09.110Z",
      "id": "K5MFncsCBrk1389O",
      "name": "IA"
    },
    {
      "createdAt": "2025-07-07T13:19:13.772Z",
      "updatedAt": "2025-07-07T13:19:13.772Z",
      "id": "APWtlgA2UKcKzIN6",
      "name": "Suporte"
    },
    {
      "createdAt": "2025-08-12T15:25:19.774Z",
      "updatedAt": "2025-08-12T15:25:19.774Z",
      "id": "WUqjtcCYycM8nth1",
      "name": "API NÃO OFICIAL"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-08-29T15:21:18.808Z",
  "versionId": "9ad7420a-7946-4eaf-ae2c-b5c8496708a7"
}