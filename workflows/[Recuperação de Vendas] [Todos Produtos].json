{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "dados_da_compra1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_da_compra1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GeraUUID": {
      "main": [
        [
          {
            "node": "CreateUser",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CreateUser": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "update_mensagem/evento",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GeraUUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get.conversa": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Vendedor IA": {
      "main": [
        [
          {
            "node": "get.conversa1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "getcliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update_mensagem/evento": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getcliente": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Vendedor IA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get.conversa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GeraUUID1": {
      "main": [
        [
          {
            "node": "CreateUser1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CreateUser1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "update_mensagem/evento1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GeraUUID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get.conversa1": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update_mensagem/evento1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "get.conversa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "get.conversa1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "no.op2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "no.op",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-08T18:32:01.104Z",
  "id": "DlJuLTVQCI2tYrav",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[Recuperação de Vendas] [Todos Produtos]",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "rec-vendas-products",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -320,
        600
      ],
      "id": "9ba9984d-c996-44a4-8b2e-bf139e757a04",
      "name": "Webhook",
      "webhookId": "60a82d47-37b6-4464-a0c2-6b8ef4f91319"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "nome",
              "value": "={{ $json[\"transformed\"][\"firstName\"] }}"
            },
            {
              "name": "email",
              "value": "={{ $item(\"0\").$node[\"Code1\"].json[\"transformed\"][\"email\"] }}"
            },
            {
              "name": "nome_produto",
              "value": "={{ $item(\"0\").$node[\"Code1\"].json[\"body\"][\"data\"][\"product\"][\"name\"] }}"
            },
            {
              "name": "transaction_id",
              "value": "={{ $item(\"0\").$node[\"Code1\"].json[\"body\"][\"id\"] }}"
            },
            {
              "name": "product_id",
              "value": "={{ $item(\"0\").$node[\"Code1\"].json[\"body\"][\"data\"][\"product\"][\"id\"] }}"
            },
            {
              "name": "data",
              "value": "={{ $now.format('yyyy-MM-dd HH:mm') }}"
            },
            {
              "name": "telefone",
              "value": "={{ $item(\"0\").$node[\"Code1\"].json[\"transformed\"][\"phone\"] }}"
            },
            {
              "name": "oferta",
              "value": "={{ $item(\"0\").$node[\"Code1\"].json[\"body\"][\"data\"][\"offer\"][\"code\"] }}"
            },
            {
              "name": "sobrenome",
              "value": "={{ $json[\"transformed\"][\"lastName\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0114bc8e-af5a-46ee-93f1-937abccb4f29",
      "name": "dados_da_compra1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        120,
        600
      ]
    },
    {
      "parameters": {
        "jsCode": "// Função auxiliar para buscar valor em qualquer lugar do objeto por nome da chave\nfunction findValue(obj, keyName) {\n  if (!obj || typeof obj !== 'object') return undefined;\n  if (obj.hasOwnProperty(keyName)) return obj[keyName];\n  \n  for (const key in obj) {\n    const value = findValue(obj[key], keyName);\n    if (value !== undefined) return value;\n  }\n  return undefined;\n}\n\n// Função para extrair dados do formato contact[...]\nfunction extractFromContactFormat(data) {\n  const result = {};\n  \n  // Procurar no body primeiro (novo formato ActiveCampaign)\n  if (data.body) {\n    result.phone = data.body['contact[phone]'] || '';\n    result.email = data.body['contact[email]'] || '';\n    result.firstName = data.body['contact[first_name]'] || '';\n    result.lastName = data.body['contact[last_name]'] || '';\n    \n    // Se encontrou algum dado no formato contact, retornar\n    if (result.phone || result.email || result.firstName || result.lastName) {\n      return result;\n    }\n  }\n  \n  return null;\n}\n\n// Função para capitalizar apenas a primeira letra da primeira palavra\nfunction capitalizeFirstOnly(str) {\n  if (!str) return '';\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\n// Processamento dinâmico\nreturn items.map(item => {\n  const data = item.json;\n  \n  let phoneRaw = '';\n  let emailRaw = '';\n  let firstName = '';\n  let lastName = '';\n  \n  // Primeiro tentar extrair do formato contact[...] (ActiveCampaign)\n  const contactData = extractFromContactFormat(data);\n  \n  if (contactData) {\n    // Formato ActiveCampaign\n    phoneRaw = contactData.phone;\n    emailRaw = contactData.email;\n    firstName = contactData.firstName;\n    lastName = contactData.lastName;\n  } else {\n    // Formato Hotmart - buscar dentro de body.data.buyer\n    if (data.body && data.body.data && data.body.data.buyer) {\n      const buyer = data.body.data.buyer;\n      phoneRaw = buyer.phone || '';\n      emailRaw = buyer.email || '';\n      const nameRaw = buyer.name || '';\n      \n      // Separar nome e sobrenome\n      if (nameRaw) {\n        const [first, ...rest] = nameRaw.trim().split(' ');\n        firstName = first || '';\n        lastName = rest.join(' ') || '';\n      }\n    } else {\n      // Fallback - buscar em qualquer lugar (caso o formato mude ligeiramente)\n      phoneRaw = findValue(data, 'phone') || findValue(data, 'checkout_phone') || '';\n      emailRaw = findValue(data, 'email') || '';\n      const nameRaw = findValue(data, 'name') || '';\n      \n      if (nameRaw) {\n        const [first, ...rest] = nameRaw.trim().split(' ');\n        firstName = first || '';\n        lastName = rest.join(' ') || '';\n      }\n    }\n  }\n  \n  // Limpar e formatar o telefone\n  let phone = phoneRaw.toString();\n  \n  // Remover caracteres não numéricos (incluindo +, -, espaços, parênteses)\n  phone = phone.replace(/\\D/g, '');\n  \n  // Se não começa com 55, adicionar\n  if (phone.length > 0 && !phone.startsWith('55')) {\n    phone = '55' + phone;\n  }\n  \n  // Email em minúsculo\n  const email = emailRaw.toString().toLowerCase();\n  \n  // Padronizar os nomes: primeira letra maiúscula, resto minúsculo\n  firstName = capitalizeFirstOnly(firstName.trim());\n  lastName = lastName.trim().toLowerCase(); // sobrenome todo em minúsculo\n  \n  return {\n    json: {\n      ...item.json,\n      transformed: {\n        phone,\n        email,\n        firstName,\n        lastName\n      }\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -100,
        600
      ],
      "id": "648a9971-21de-4713-a778-b3478ea04cdf",
      "name": "Code1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "id": "92a63349-d8b4-4afb-b821-24f8ec90ba5a",
      "name": "GeraUUID",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        1800,
        1100
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "tableId": "disparo_mensagem_ia_vendas",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"nome\"] }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"telefone\"] }}"
            },
            {
              "fieldId": "sobrenome",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"sobrenome\"] }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "email",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"email\"] }}"
            },
            {
              "fieldId": "evento",
              "fieldValue": "={{ $('Webhook').item.json.body.event }}"
            },
            {
              "fieldId": "produto",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"product\"][\"name\"] }}"
            },
            {
              "fieldId": "id_produto",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"product\"][\"id\"] }}"
            },
            {
              "fieldId": "mensagem",
              "fieldValue": "=Olá, tudo bem? Aqui é a Dani da Equipe Sorveteiro Raiz!\n\nEstou entrando em contato com você porque você estava quase comprando o curso Profissão Sorveteiro, mas por algum motivo não concluiu a compra. \nEstou aqui para te ajudar. Por que não fechou a compra? O que houve?"
            },
            {
              "fieldId": "oferta",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"oferta\"] }}"
            }
          ]
        }
      },
      "id": "a6b39e07-81af-4286-b5cd-ca4ec06cd01c",
      "name": "CreateUser",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1980,
        1100
      ],
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4e77cc7c-48f4-4cbe-94e7-6d211db67002",
              "leftValue": "={{ $('get.conversa').item.json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2dc7cb95-bd67-4355-9a20-88268f761014",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1600,
        1000
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "disparo_mensagem_ia_vendas",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"telefone\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1180,
        1000
      ],
      "id": "ac6b34e3-17af-4d47-964d-9f2f6f62b079",
      "name": "get.conversa",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=<CONTATO>{{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"telefone\"] }}</CONTATO>\n<LEAD>{{ $node[\"dados_da_compra1\"].json[\"nome\"] }}</LEAD>\n<PRODUTO>{{ $node[\"dados_da_compra1\"].json[\"nome_produto\"] }}</PRODUTO>\n\n\n<ULTIMAMENSAGEM>{{ $node[\"Redis\"].json[\"propertyName\"] }}</ULTIMAMENSAGEM>\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=<PROMPT>\n  <IDENTIDADE>\n    <PERSONAGEM>Você é a Dani — vendedora extremamente persuasiva, com alto índice de conversão.</PERSONAGEM>\n    <MISSAO>Recuperar a venda abandonada de forma direta, assertiva e com foco total na conversão.</MISSAO>\n  </IDENTIDADE>\n\n  <RESTRICOES>\n    <NAO_FAZER>\n      <REGRA_1>NUNCA mencionar \"Da Sorveteiro Raiz\".</REGRA_1>\n      <REGRA_2>NUNCA iniciar com cumprimentos genéricos como \"Oi, tudo bem?\".</REGRA_2>\n      <REGRA_3>NUNCA quebrar o fluxo natural da conversa — continue como se nada tivesse interrompido.</REGRA_3>\n      <REGRA_4>NUNCA deixar de personalizar com <LEAD></LEAD> e <PRODUTO></PRODUTO>.</REGRA_4>\n      <REGRA_5>NUNCA responder após a pergunta final — termine a mensagem e aguarde.</REGRA_5>\n      <REGRA_6>EVITAR frases vagas ou genéricas, sempre ser clara e objetiva.</REGRA_6>\n    </NAO_FAZER>\n\n    <CONDICOES_BINARIAS>\n      <SE nome_do_cliente_vazio=\"true\">Interrompa execução e solicite nome do cliente antes de prosseguir.</SE>\n      <SE produto_vazio=\"true\">Interrompa execução e solicite nome do produto antes de prosseguir.</SE>\n      <SE ultima_mensagem_disponivel=\"true\">Utilize {{ $node[\"Redis\"].json[\"propertyName\"] }} como referência.</SE>\n      <SE ultima_mensagem_disponivel=\"false\">Crie retomada de conversa como se fosse a sequência natural.</SE>\n    </CONDICOES_BINARIAS>\n  </RESTRICOES>\n\n  <REPETICOES_IMPORTANTES>\n    <INSTRUCAO>Repita: Nunca mencionar \"Da Sorveteiro Raiz\".</INSTRUCAO>\n    <INSTRUCAO>Repita: Nunca usar saudações genéricas como \"Oi, tudo bem?\".</INSTRUCAO>\n    <INSTRUCAO>Repita: Sempre finalizar com pergunta para descobrir motivo do abandono do carrinho.</INSTRUCAO>\n  </REPETICOES_IMPORTANTES>\n\n  <ESTRATEGIA>\n    <PERSUASAO>\n      Seja direta, agressiva (no sentido comercial) e educada.\n      Exemplo negativo: \"Será que você quer comprar?\" — Fraco, não use.\n      Exemplo positivo: \"<LEAD>, percebi que você deixou o <PRODUTO> no carrinho. O que te impediu de finalizar agora?\"\n    </PERSUASAO>\n    <ENCADEAMENTO>\n      Continue a conversa no mesmo tom e contexto anterior.\n    </ENCADEAMENTO>\n  </ESTRATEGIA>\n\n  <MENSAGEM_MODELO>\n    <TEXTO>\n      \"<LEAD>, percebi que você deixou o <PRODUTO> no carrinho. O que aconteceu para você não concluir a compra?\"\n    </TEXTO>\n  </MENSAGEM_MODELO>\n</PROMPT>\n"
        }
      },
      "id": "cd141801-63c8-4977-9bad-123f90ea74b5",
      "name": "Vendedor IA",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1280,
        360
      ]
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1280,
        540
      ],
      "id": "736c2921-e8ad-408a-a48d-9e601408bc6d",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "PwsgEoPwyqAPcsYQ",
          "name": "AI Vendas | Dani - n8n\t"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n\t\"name\": \"nome do lead aqui\",\n\t\"numero\": \"numero de telefone aqui\",\n  \"text\": \"mensagem enviada aqui\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1460,
        540
      ],
      "id": "dac93b0d-2693-4db0-8ad0-61cb28056afd",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "025e6878-612d-4c76-94d7-19f6a9e74418",
              "name": "output.numero",
              "value": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"telefone\"] }}",
              "type": "string"
            },
            {
              "id": "4786db0a-53f1-4e4e-87ac-c9cedc8e62ab",
              "name": "output.nam",
              "value": "={{ $item(\"0\").$node[\"Code1\"].json[\"body\"][\"data\"][\"buyer\"][\"name\"] }}",
              "type": "string"
            },
            {
              "id": "a9925528-1b2c-4c6e-85fa-499ee4b90881",
              "name": "linkPreview",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "2b2b6094-b11d-482f-9022-27ce0f643b7c",
              "name": "delay",
              "value": "1200",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        340,
        600
      ],
      "id": "935dfb87-92bf-4a0a-85d8-db81067f4c20",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "disparo_mensagem_ia_vendas",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $item(\"0\").$node[\"Edit Fields\"].json[\"output\"][\"numero\"] }}"
            },
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $item(\"0\").$node[\"If1\"].json[\"id\"] }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "mensagem",
              "fieldValue": "=Olá, tudo bem? Aqui é a Dani da Equipe Sorveteiro Raiz!\n\nEstou entrando em contato com você porque você estava quase comprando o curso Profissão Sorveteiro, mas por algum motivo não concluiu a compra. \nEstou aqui para te ajudar. Por que não fechou a compra? O que houve?"
            },
            {
              "fieldId": "produto",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"nome_produto\"] }}"
            },
            {
              "fieldId": "id_produto",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"product_id\"] }}"
            },
            {
              "fieldId": "evento",
              "fieldValue": "={{ $('Webhook').item.json.body.event }}"
            },
            {
              "fieldId": "oferta",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"oferta\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1800,
        920
      ],
      "id": "d910a32e-1752-4629-b7e8-950343f13ee1",
      "name": "update_mensagem/evento",
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://unnichat.com.br/a/start/7VKumMOoV3cJCIVwq3I1",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"nome\": \"{{ $item(\"0\").$node[\"Edit Fields\"].json[\"output\"][\"nam\"] }}\",\n  \"telefone\": \"{{ $item(\"0\").$node[\"Edit Fields\"].json[\"output\"][\"numero\"] }}\",\n  \"type\": \"message\",\n  \"text\": {\n    \"body\": \"recuperacao\"\n  }\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2000,
        920
      ],
      "id": "42e3fb72-d11a-4b41-8192-630b8f8fb3ed",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "atendimento_wpp_vendas",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $node[\"dados_da_compra1\"].json[\"telefone\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        560,
        600
      ],
      "id": "e96046b1-a308-410a-b88e-3f6bfe1fadf4",
      "name": "getcliente",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $json[\"sessionid\"] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        760,
        600
      ],
      "id": "8526c53c-9237-45e9-b0e3-f2dbdd93a05f",
      "name": "Redis",
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b8282cdc-b5e8-4299-b3a9-85f390544c87",
              "leftValue": "={{ $json.propertyName?.toJsonString() }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        980,
        600
      ],
      "id": "b8454cec-f6cd-4391-8dc0-dd0925337562",
      "name": "If"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "id": "9cdea3db-bf7e-4a40-ac2f-232626b4ab8f",
      "name": "GeraUUID1",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        2220,
        460
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "tableId": "disparo_mensagem_ia_vendas",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"nome\"] }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"telefone\"] }}"
            },
            {
              "fieldId": "sobrenome",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"sobrenome\"] }}"
            },
            {
              "fieldId": "created_at",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "email",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"email\"] }}"
            },
            {
              "fieldId": "evento",
              "fieldValue": "={{ $('Webhook').item.json.body.event }}"
            },
            {
              "fieldId": "produto",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"product\"][\"name\"] }}"
            },
            {
              "fieldId": "id_produto",
              "fieldValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"product\"][\"id\"] }}"
            },
            {
              "fieldId": "mensagem",
              "fieldValue": "={{ $('Vendedor IA').item.json.output.text }}"
            },
            {
              "fieldId": "oferta",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"oferta\"] }}"
            }
          ]
        }
      },
      "id": "6356c248-2766-41e9-80af-d8d66c75833d",
      "name": "CreateUser1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2400,
        440
      ],
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4e77cc7c-48f4-4cbe-94e7-6d211db67002",
              "leftValue": "={{ $('get.conversa1').item.json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b7c21f02-d0ea-4193-94fb-b84aca0390de",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2020,
        340
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "disparo_mensagem_ia_vendas",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"telefone\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1640,
        360
      ],
      "id": "a3a9153e-45d8-4fdc-beb7-2b1b19a51a38",
      "name": "get.conversa1",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "disparo_mensagem_ia_vendas",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $item(\"0\").$node[\"Edit Fields\"].json[\"output\"][\"numero\"] }}"
            },
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $item(\"0\").$node[\"If2\"].json[\"id\"] }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "mensagem",
              "fieldValue": "={{ $('Vendedor IA').item.json.output.text }}"
            },
            {
              "fieldId": "produto",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"nome_produto\"] }}"
            },
            {
              "fieldId": "id_produto",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"product_id\"] }}"
            },
            {
              "fieldId": "evento",
              "fieldValue": "={{ $('Webhook').item.json.body.event }}"
            },
            {
              "fieldId": "oferta",
              "fieldValue": "={{ $item(\"0\").$node[\"dados_da_compra1\"].json[\"oferta\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2220,
        260
      ],
      "id": "3cd42e4a-90d9-4c28-94ed-217ca2a026ec",
      "name": "update_mensagem/evento1",
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://unnichat.com.br/a/start/OcEUR1yJ1poIrFsOZWW1",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"nome\": \"{{ $item(\"0\").$node[\"Edit Fields\"].json[\"output\"][\"nam\"] }}\",\n  \"telefone\": \"{{ $item(\"0\").$node[\"Edit Fields\"].json[\"output\"][\"numero\"] }}\",\n  \"type\": \"message\",\n  \"text\": {\n    \"body\": \"{{ $json.mensagem }}\"\n  }\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2420,
        260
      ],
      "id": "6803b59f-db8e-4b82-8d03-c9e5e61d90f5",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "content": "# TEMPLATE FORA JANELA 24H",
        "height": 580,
        "width": 1320,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1020,
        760
      ],
      "typeVersion": 1,
      "id": "f5c2706a-fa50-4a34-8e2a-cd973de8c84c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# MENSAGEM DENTRO JANELA 24H",
        "height": 500,
        "width": 1580,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1220,
        200
      ],
      "typeVersion": 1,
      "id": "80c301a8-ada8-4ec1-8894-8cfa62cc5f81",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2160,
        1100
      ],
      "id": "b14f6a19-f4dc-48fc-bce9-d9c22a6e806f",
      "name": "Wait",
      "webhookId": "8fa158af-ca8d-4f10-a869-ad28ee152610"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2620,
        440
      ],
      "id": "26c4d293-2422-4dec-959d-7fbc231f7c4f",
      "name": "Wait1",
      "webhookId": "8fa158af-ca8d-4f10-a869-ad28ee152610"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "59dfd646-caa8-4068-a290-b6dff4449892",
              "leftValue": "={{ $('dados_da_compra1').item.json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1360,
        1000
      ],
      "id": "c45dc8e5-df6f-4982-8c3f-6e4538eb798d",
      "name": "If3"
    },
    {
      "parameters": {},
      "id": "ed239247-c1c0-4ca0-935b-1b2f52ee27c4",
      "name": "no.op2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1520,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "59dfd646-caa8-4068-a290-b6dff4449892",
              "leftValue": "={{ $('dados_da_compra1').item.json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1820,
        360
      ],
      "id": "bd04562a-8bc8-4242-921b-aee78cb0055d",
      "name": "If4"
    },
    {
      "parameters": {},
      "id": "d00ce4f6-8271-45ce-bb8c-4727673bf7f4",
      "name": "no.op",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1980,
        500
      ]
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "webhook.sorveteiroraiz.com",
            "user-agent": "GuzzleHttp/7",
            "content-length": "808",
            "content-type": "application/x-www-form-urlencoded",
            "x-forwarded-for": "23.22.14.42",
            "x-forwarded-host": "webhook.sorveteiroraiz.com",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "aae19483bb9a",
            "x-real-ip": "23.22.14.42",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "contact[id]": "20816",
            "contact[email]": "viniciussouzamartins1986@gmail.com",
            "contact[first_name]": "VINICIUS SOUZA MARTINS",
            "contact[last_name]": "",
            "contact[phone]": "+5527996900508",
            "contact[orgname]": "",
            "contact[customer_acct_name]": "",
            "contact[tags]": "LC10 - LEADS JORNADA PROFISSÃO SORVETEIRO, CHECKOUT-BOLETO-PG-V02-LC10",
            "contact[ip4]": "0.0.0.0",
            "contact[fields][sr04utmsource]": "fb",
            "contact[fields][sr04pagina]": "Curso Profissão Sorveteiro – V02 – GWPP",
            "contact[fields][sr04utmterm]": "120227927373240139",
            "contact[fields][sr04utmcontent]": "120227927373090139",
            "contact[fields][sr04utmmedium]": "paid",
            "contact[fields][sr04utmcampaign]": "120227927372870139",
            "contact[fields][lc4_data_de_inscrio]": "2025-08-01T09:25:57-03:00",
            "seriesid": "123"
          },
          "webhookUrl": "https://webhook.sorveteiroraiz.com/webhook/rec-vendas-products",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-12T15:25:26.686Z",
      "updatedAt": "2025-08-12T15:25:26.686Z",
      "id": "jnxO0I98Q4JFiEFn",
      "name": "API OFICIAL"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-08-16T16:19:50.872Z",
  "versionId": "f98c9feb-97ab-4d56-ba48-6d7cac92522b"
}