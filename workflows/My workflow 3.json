{
  "active": false,
  "connections": {
    "camposIniciais": {
      "main": [
        [
          {
            "node": "Prompts",
            "type": "main",
            "index": 0
          },
          {
            "node": "No Op",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts": {
      "main": [
        [
          {
            "node": "UnificaDados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UnificaDados": {
      "main": [
        [
          {
            "node": "getClient",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Op": {
      "main": [
        [
          {
            "node": "UnificaDados",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "fromMe",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "GerarUUID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getClient": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GerarUUID": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "getClient",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fromMe": {
      "main": [
        [
          {
            "node": "No Op1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "empilhaÁudio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "empilhaTexto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Evolution API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaTexto": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtem": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaÁudio": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "No Op2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Deleta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta": {
      "main": [
        [
          {
            "node": "messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Op2": {
      "main": [
        [
          {
            "node": "Deleta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "messages": {
      "main": [
        [
          {
            "node": "Vendedor IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vendedor IA": {
      "main": [
        [
          {
            "node": "Parser  Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "infos": {
      "ai_tool": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Modelos Bicicletas": {
      "ai_tool": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Informações Bicicletas": {
      "ai_tool": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain1": {
      "main": [
        [
          {
            "node": "Segmentos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Responde texto": {
      "main": [
        [
          {
            "node": "1,2s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me1": {
      "main": [
        [
          {
            "node": "Responde texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "no.op2": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Replace Me1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s": {
      "main": [
        [
          {
            "node": "no.op2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "camposIniciais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-13T04:59:41.533Z",
  "id": "s0tA2Rnn6OGDXBwA",
  "meta": null,
  "name": "My workflow 3",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "7718f892-739a-4220-80d1-9b454e3cbf72",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5680,
        400
      ],
      "id": "33f75c45-28c4-422e-8bd1-509aa7ecd060",
      "name": "Webhook",
      "webhookId": "7718f892-739a-4220-80d1-9b454e3cbf72"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9ecf2fc-da2c-4f44-897a-5dc0a2f2f379",
              "name": "meta.telefoneCliente",
              "value": "={{ \n  $json.body?.conversation?.contact_inbox?.contact_id || \n  $json.body?.data?.key?.remoteJid || \n  null \n}}",
              "type": "string"
            },
            {
              "id": "a019046c-3b5a-4fd0-a497-de55cb2178ea",
              "name": "meta.telefoneEmpresa",
              "value": "={{ $json.body.sender }}",
              "type": "string"
            },
            {
              "id": "dab7ca54-c3d2-4a36-a9ca-a0ebbd375ef5",
              "name": "meta.nomeCliente",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "01238a36-6907-4aec-ab21-26345ed5fc96",
              "name": "whatsapp.evo.nomeInstancia",
              "value": "={{ $json.body.instance || null }}",
              "type": "string"
            },
            {
              "id": "81612acf-1b66-4c8e-82e4-ce8c77b31334",
              "name": "content.mensagem",
              "value": "={{ \n  $json.body?.content || \n\n  $json.body?.data?.message?.extendedTextMessage?.text || \n  $json.body?.data?.message?.imageMessage?.caption || \n  $json.body?.data?.message?.conversation || \n  $json?.message?.text || \n  $json?.message?.caption || \n  null \n}}",
              "type": "string"
            },
            {
              "id": "cc7dcfe1-8ad7-4fe8-93ec-8f643c7d08c7",
              "name": "content.tipoMensagem",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "2dfc64f4-b222-4ea7-b095-fdd96d9fcb95",
              "name": "content.idMensagem",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "9d947263-3b68-4c63-88ba-ef1b9de22571",
              "name": "empresa.nomeEmpresa",
              "value": "GG Bike Shop",
              "type": "string"
            },
            {
              "id": "076ad2d4-b8ea-440f-9c02-f7e8417a984d",
              "name": "whatsapp.evo.apikey",
              "value": "={{ $json.body.apikey || null }}",
              "type": "string"
            },
            {
              "id": "0c237725-0428-4f1d-bddf-41bd289b3168",
              "name": "whatsapp.evo.server_url",
              "value": "={{ $json.body.server_url || null }}",
              "type": "string"
            },
            {
              "id": "255b9c45-7769-4d09-9c50-61dcdfb7c09d",
              "name": "app.debouncerTime",
              "value": "4",
              "type": "string"
            },
            {
              "id": "196aeb96-5c33-4dd7-9a4f-6bd40765b7fb",
              "name": "doc.id",
              "value": "1Yo4wzv6EnwnjZJ_Ou1dTkKsuA8iDp1xZfADxqAm62LA",
              "type": "string"
            },
            {
              "id": "fc7c5c8f-b505-4a43-ae07-51eea58d6f80",
              "name": "linkPreview",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "e30bbf8c-d5da-4410-b875-8dfe4b301798",
              "name": "Digitando",
              "value": 1200,
              "type": "number"
            },
            {
              "id": "c4f557bd-72f1-4507-8d9d-c2a590eea2b8",
              "name": "content.quoted",
              "value": "={{ $json.body.data.message.conversation }}\n{{ $json.body.data.message.imageMessage.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0089f47e-5011-40d0-a882-ff968a3cdda6",
      "name": "camposIniciais",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5300,
        360
      ],
      "notesInFlow": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "aa4d5d29-e6f1-4bce-b5ff-4575b553a077",
              "name": "systemMessageAgente",
              "value": "=<prompt>\n\n  <!-- Instruções para o Agente -->\n  <instruções>\n    Você é a Ana, uma agente especializada em vendas de Cadeiras Gamer. Sua missão é responder clientes por WhatsApp, oferecendo informações sobre os modelos disponíveis, valores, auxiliando no processo de compra e realizando cálculos de valores à vista ou parcelados quando solicitado. \n    - Seja educada, amigável e objetiva.\n    - Varie a linguagem para evitar parecer robótica, mantendo clareza e eficiência.\n    - Utilize a data de hoje para se localizar: {{ $now.toUTC(-180) }}\n  </instruções>\n\n<!-- Tools -->\n  <tools>\n    <tool>\n      <name>modelos_produtos</name>\n      <description>Envia os modelos com fotos sobre os modelos de cadeiras disponíveis na loja, incluindo imagens e preços.</description>\n      <usage>Acione esta ferramenta  quando o cliente perguntar sobre modelos disponíveis. Só ative esta tool uma vez por conversa. Após ativar a tool, envie uma mensagem breve e direta, como \"O que acha desses modelos?\" ou \"Qual desses modelos te agrada mais?\". Não reforce novamente os modelos listados.</usage>\n\n<tools>\n    <tool>\n      <name>informações_produtos</name>\n      <description>Traz as informações sobre os modelos para utilizar na conversa.</description>\n      <usage>Acione esta ferramenta sempre que o cliente perguntar alguma informação sobre um modelo. Utilize as informações que retornarem da tool para seguir a conversa.</usage>\n\n  <!-- Apresentação -->\n  <apresentação>\n    - Apresente-se educadamente quando o cliente iniciar a conversa.\n    - Utilize a primeira mensagem do cliente como gancho para sua apresentação.\n    - Inclua uma pergunta para iniciar a interação:\n      - \"{{ new Date().getHours() < 12 ? 'Bom dia' : (new Date().getHours() < 18 ? 'Boa tarde' : 'Boa noite') }}, {{ $json.meta.nomeCliente }}, tudo bem? Posso te ajudar com informações sobre os modelos e preços de Bikes de Triathlon da {{ $json.empresa.nomeEmpresa }}?\"\n      - \"{{ $json.meta.nomeCliente }}, qual modelo de bike você está procurando hoje?\"\n  </apresentação>\n\n  <!-- Exemplos de Apresentação -->\n  <modelo_de_apresentação>\n    - \"Oi, {{ $json.meta.nomeCliente }}, tudo bem? Sou a Ana, especialista em vendas de cadeiras Gamers da {{ $json.empresa.nomeEmpresa }}. Estou aqui para ajudar!\"\n    - \"Olá! Aqui é a Ana. {{ $json.meta.nomeCliente }}, vi que você tem interesse em Cadeiras Gamer. Qual modelo está procurando?\"\n  </modelo_de_apresentação>\n\n  <!-- Condução da Conversa -->\n  <condução>\n    - Responda de forma clara e objetiva sobre os preços e modelos disponíveis.\n    - Conduza a conversa incentivando o cliente a compartilhar dúvidas ou preferências.\n    - Inclua informações sobre formas de pagamento ou promoções disponíveis, quando relevante.\n    - Sempre finalize as interações com uma pergunta amigável e direta após o envio das informações solicitadas, evitando repetições.\n\n    <!-- Uso das Tools -->\n    <uso_de_tools>\n      - Somente quando o cliente perguntar quais são modelos disponíveis, acione a tool \"teste_tool_modelos_produtos\" para enviar as informações completas. Após a ativação da tool, envie uma mensagem breve:\n        - \"O que acha desses modelos?\"\n        - \"Qual desses modelos te agrada mais?\"\n      - Não reforce os modelos listados na mensagem adicional para evitar redundância.\n      -Quando o cliente gostar de um produto ou solicitar mais informações sobre algum produto, acione a tool \"teste_tool_infos_produtos\" e localize as informações do produto para prosseguir com a conversa.\n      - Quando o cliente solicitar informações sobre a loja, acione a tool \"infos\", ao acionar essa tool, responda apenas o que  cliente solicitar, não envie respostas extras.\n      - Quando o cliente perguntar sobre valores à vista ou parcelados, acione a tool \"calculadora\" e forneça os cálculos necessários.\n    </uso_de_tools>\n\n    <!-- Venda Direta -->\n    <processo_de_venda>\n      - Quando o cliente estiver pronto para comprar, oriente-o sobre os próximos passos:\n        - \"Ótimo! Para finalizar, preciso confirmar o modelo e forma de pagamento.\"\n        - \"Temos o pagamento em até 12x no cartão ou com desconto à vista. Qual você prefere?\"\n      - Confirme o pedido antes de finalizar:\n        - \"Perfeito, só para confirmar: você escolheu a Cadeira Gamer XYZ, certo? Vou finalizar o pedido para você.\"\n    </processo_de_venda>\n  </condução>\n\n  <!-- Respostas a Dúvidas -->\n  <respostas_a_dúvidas>\n    - Responda de forma educada e direta. Exemplo:\n      - Cliente: \"Qual é o preço da Cadeira Speed Concept?\"\n      - Resposta: \"O preço da Cadeira Speed Concept está disponível a partir de R$ \"valor\". Podemos falar sobre as opções de pagamento?\"\n  </respostas_a_dúvidas>\n  \n  <!-- Manejo de Objeções -->\n  <manejo_de_objeções>\n    - Princípios Gerais:\n      - Ouça a objeção com atenção, demonstre empatia e ofereça soluções.\n      - Use frases como:\n        - \"Entendo sua preocupação, e temos uma opção que pode te ajudar...\"\n        - \"Sei que o preço é importante, e por isso oferecemos desconto para pagamento à vista.\"\n  </manejo_de_objeções>\n\n  <!-- Limitações -->\n  <limitações>\n    - Não forneça informações fora do escopo de vendas de cadeiras.\n    - Não forneça dados de produtos que não estão no banco de dados do supabase.\n    - Redirecione dúvidas técnicas para o suporte: \"Essa questão é técnica, mas posso te ajudar com o contato do suporte. Quer que eu encaminhe?\"\n  </limitações>\n\n  <!-- Formatação e Linguagem no WhatsApp -->\n  <uso_de_linguagem_e_formatação>\n    - Quebre textos longos em partes menores.\n    - Evite parecer robótica; use variações na linguagem.\n    - Negrito para informações importantes:\n      - \"A Cadeira Speed Concept está disponível por por *R$ 110.999,00*.\"\n  </uso_de_linguagem_e_formatação>\n\n</prompt>\n",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "e823923b-48c0-4f4d-9087-e7b1bcbba968",
      "name": "Prompts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5000,
        220
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -4780,
        380
      ],
      "id": "d56db1fa-ff1d-4227-93ca-d6b428221ef9",
      "name": "UnificaDados"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -5020,
        520
      ],
      "id": "f6d52469-29f9-40ef-a9b2-1207603600a2",
      "name": "No Op"
    },
    {
      "parameters": {
        "content": "## VERIFICA SE CLIENTE EXISTE",
        "height": 800,
        "width": 1100,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4480,
        20
      ],
      "id": "8041beb3-81ad-4cda-8b2b-4c68657498ac",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "eab8aeb4-11c8-4036-9b00-5be6bee566a6",
              "leftValue": "={{ $item(\"0\").$node[\"getClient\"].json[\"telefone\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4160,
        380
      ],
      "id": "5faa6dc8-56c1-4e11-9c82-37da6d7b55b3",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "[AGENTE-VENDA] - CLIENTES",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $item(\"0\").$node[\"UnificaDados\"].json[\"meta\"][\"telefoneCliente\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4380,
        380
      ],
      "id": "950e049d-2d60-4cc0-b3a8-d3111be51d6e",
      "name": "getClient",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "0ku9ziUzfzcnNG5C",
          "name": "Supabase - Eng. Matheus"
        }
      }
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -3940,
        480
      ],
      "id": "ab940747-acb5-403a-ab67-acb38d44d5ad",
      "name": "GerarUUID"
    },
    {
      "parameters": {
        "tableId": "[AGENTE-VENDA] - CLIENTES",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"meta\"][\"nomeCliente\"] }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"meta\"][\"telefoneCliente\"] }}"
            },
            {
              "fieldId": "idMensagem",
              "fieldValue": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"content\"][\"idMensagem\"] }}"
            },
            {
              "fieldId": "sessionID",
              "fieldValue": "={{ $item(\"0\").$node[\"GerarUUID\"].json[\"data\"] }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3720,
        480
      ],
      "id": "12f3ddfe-c0bd-402b-9b1f-273298533ce8",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "0ku9ziUzfzcnNG5C",
          "name": "Supabase - Eng. Matheus"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -3640,
        140
      ],
      "id": "23f8dfca-b6ea-4f9e-bab7-b1fc85fa81d2",
      "name": "No Op1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "37aa63b6-3041-4703-a2ad-aebd0641436f",
              "leftValue": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"fromMe\"] }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3940,
        280
      ],
      "id": "7e587df4-39be-4d5f-aa8f-f9d2076a6032",
      "name": "fromMe"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0cb14635-2673-408e-86db-ce9e0373674b",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "60065893-74f7-4b64-bc1a-d891202efa78",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            }
          ]
        },
        "options": {}
      },
      "id": "6fbe5457-a1de-4489-9a2b-fa7c4ec9e57c",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3200,
        300
      ]
    },
    {
      "parameters": {
        "content": "## TRATAMENTO MENSAGENS WHATSAPP",
        "height": 800,
        "width": 1500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3300,
        20
      ],
      "id": "0ab8d648-7493-4332-8637-756ab2283bcf",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"whatsapp\"][\"evo\"][\"nomeInstancia\"] }}",
        "remoteJid": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"meta\"][\"telefoneCliente\"] }}",
        "messageText": "=Ops, {{ $item(\"0\").$node[\"camposIniciais\"].json[\"meta\"][\"nomeCliente\"] }}. Ainda não posso analisar imagens. Meu criador não quis adicionar essa funcionalidade (ele que me mandou falar isso rsrs).",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -2920,
        580
      ],
      "id": "4fd88681-b812-4d9d-9d73-c264cb1abee6",
      "name": "Evolution API",
      "credentials": {
        "evolutionApi": {
          "id": "satF1R9DPUrUzdLE",
          "name": "Evolution - AUTHPRO"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('camposIniciais').item.json.content.mensagem, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "1d21da3e-8aba-44cd-8099-1e6a86fde065",
      "name": "empilhaTexto",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2920,
        340
      ],
      "credentials": {
        "redis": {
          "id": "pjR1X6wBK1AX0GnK",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "options": {}
      },
      "id": "88261671-ae95-4097-94bc-0e6f46e29b40",
      "name": "Obtem",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2560,
        340
      ],
      "credentials": {
        "redis": {
          "id": "pjR1X6wBK1AX0GnK",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('Webhook').item.json.body.data.message.speechToText, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "a1f05518-7746-4de8-ba12-de7d1ab66a0c",
      "name": "empilhaÁudio",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2920,
        140
      ],
      "credentials": {
        "redis": {
          "id": "pjR1X6wBK1AX0GnK",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ \n  $json.message.length > 8 \n  ? $('camposIniciais').item.json.content.idMensagem\n  : JSON.parse($json.message.first()).message_id.toString().trim()\n}}",
                    "rightValue": "={{ $('camposIniciais').item.json.content.idMensagem.toString().trim() }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "nada a fazer"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2b9b7794-e8f6-45b5-8021-f59dbb747cb0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus($('camposIniciais').item.json.app.debouncerTime, 'seconds') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "proceder"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "esperar"
        }
      },
      "id": "61e610cb-65da-40d2-b9ac-1285d10b554c",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2360,
        340
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}"
      },
      "id": "d832b1cc-dab9-4acb-bd53-b294c1a1d2e6",
      "name": "Deleta",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2020,
        340
      ],
      "credentials": {
        "redis": {
          "id": "pjR1X6wBK1AX0GnK",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"app\"][\"debouncerTime\"] }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2100,
        520
      ],
      "id": "336ad423-9113-4ff1-95fd-78783cb91423",
      "name": "Wait",
      "webhookId": "8405c4e1-630e-45ff-8828-fd90325fc489"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2100,
        120
      ],
      "id": "90ec38f5-8ffd-479b-8742-befc1f90e474",
      "name": "No Op2"
    },
    {
      "parameters": {
        "content": "## INTELIGENCIA DO AGENTE",
        "height": 800,
        "width": 1720,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1720,
        20
      ],
      "id": "6c1b5dbf-0948-4dbc-991f-3994154730ff",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7158aa0-84e0-44b1-8629-bf23fb4c0766",
              "name": "=messages",
              "value": "={{ $json.message.map(buffer => JSON.parse(buffer).message).join('\\n') }}\n{{ (() => { \n    try {\n        return $('camposIniciais').item.json.content.quoted || \"\"; \n    } catch (error) {\n        return \"\";\n    } \n})() }}\n",
              "type": "string"
            },
            {
              "id": "0c4c3b74-297a-4cf2-b2b8-0feefad328ec",
              "name": "sessionId",
              "value": "={{ $item(\"0\").$node[\"getClient\"].json[\"sessionID\"] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "19413334-ab3c-4e01-bb11-6d83ad7216c0",
      "name": "messages",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1520,
        180
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messages').all()[0].json.messages }}",
        "options": {
          "systemMessage": "={{ $('Prompts').item.json.systemMessageAgente }}"
        }
      },
      "id": "553ea3f8-8814-4674-a55a-2466d5239582",
      "name": "Vendedor IA",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -1040,
        180
      ]
    },
    {
      "parameters": {},
      "id": "1c8b60d4-711a-4615-9b03-22177d69ffbc",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -760,
        500
      ]
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use quando o usuário precisar saber de dados da loja de iPhone.",
        "operation": "get",
        "documentURL": "={{ $('camposIniciais').item.json.doc.id }}"
      },
      "id": "d5233217-9ff9-4140-85e7-1f518fb73345",
      "name": "infos",
      "type": "n8n-nodes-base.googleDocsTool",
      "typeVersion": 2,
      "position": [
        -580,
        500
      ],
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "CZatswa53EBzPYKB",
          "name": "Google Docs - marcosvini.daroch@gmail.com"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('messages').item.json.sessionId }}",
        "contextWindowLength": 20
      },
      "id": "4915ffe9-cebe-43ae-9cda-e5f27046572d",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        -1220,
        560
      ],
      "credentials": {
        "redis": {
          "id": "pjR1X6wBK1AX0GnK",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4172ea47-df8f-42d5-98c7-7340c22aab44",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -1520,
        480
      ],
      "credentials": {
        "openAiApi": {
          "id": "TJb8CFfEt4SRVUHE",
          "name": "OpenAi - rec. de vendas"
        }
      }
    },
    {
      "parameters": {
        "content": "### CHAT MODEL: \nGPT-4o-mini",
        "height": 220,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1600,
        400
      ],
      "typeVersion": 1,
      "id": "df6dc589-551d-4274-baeb-b910f6e2c91d",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "### MEMÓRIA DO CHAT: \nRedis (nativo)",
        "height": 240,
        "width": 220,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1300,
        460
      ],
      "typeVersion": 1,
      "id": "96d3ea16-c18a-43dd-b3c8-62b1028c7d50",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "content": "\n\n### FERRAMENTAS (TOOLS) \n-Calculadora\n-Doc infos loja\n-Tool Modelos de Bicicletas\n-Tools Informações Bicicletas",
        "height": 180,
        "width": 960,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1020,
        460
      ],
      "typeVersion": 1,
      "id": "70e7911e-8ed9-41ff-b573-b0a0b30728ab",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "name": "modelos_produtos",
        "description": "Ative essa tool apenas para apresentar os modelos de bicicletas com fotos do produto.\n\nSe o cliente precisar de informações sobre o produto utilize a tool \"teste_tool_infos_produtos\"",
        "workflowId": {
          "__rl": true,
          "value": "0g8xot2JmgAjbMFy",
          "mode": "list",
          "cachedResultName": "teste_tool_modelos_produtos"
        },
        "fields": {
          "values": [
            {
              "name": "nomeCliente",
              "stringValue": "={{ $('camposIniciais').item.json.meta.nomeCliente }}"
            },
            {
              "name": "telefoneCliente",
              "stringValue": "={{ $('camposIniciais').item.json.meta.telefoneCliente }}"
            }
          ]
        }
      },
      "id": "0bf90e11-32f4-4149-b5f5-377039eb8f7f",
      "name": "Modelos Bicicletas",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -380,
        500
      ]
    },
    {
      "parameters": {
        "name": "informacoes_produtos",
        "description": "Ative essa tool quando o cliente escolher um modelo de bicicleta ou quiser mais informações sobre algum modelo.\n\nSe o cliente quiser saber todos os modelos com fotos do produto utilize a tool \"teste_tool_modelos_produtos\"",
        "workflowId": {
          "__rl": true,
          "value": "jqXHmORMoxUgYWyW",
          "mode": "list",
          "cachedResultName": "teste_tool_infos_produtos"
        },
        "fields": {
          "values": [
            {
              "name": "nomeCliente",
              "stringValue": "={{ $('camposIniciais').item.json.meta.nomeCliente }}"
            },
            {
              "name": "telefoneCliente",
              "stringValue": "={{ $('camposIniciais').item.json.meta.telefoneCliente }}"
            }
          ]
        }
      },
      "id": "37c0e173-acca-4be1-b1fb-70a251285212",
      "name": "Informações Bicicletas",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        -180,
        500
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, pode colocar entre \"`\", ou seja, na seguinte formatação: `www.link.com.br`\n"
            }
          ]
        }
      },
      "id": "657b30a5-70d2-4b7f-a2fb-d5f408e1f28a",
      "name": "Parser  Chain1",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        180,
        360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais').item.json.whatsapp.evo.server_url }}/message/sendText/{{ $('camposIniciais').item.json.whatsapp.evo.nomeInstancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('camposIniciais').item.json.whatsapp.evo.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('camposIniciais').item.json.meta.telefoneCliente }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            },
            {
              "name": "linkPreview",
              "value": "={{ $('camposIniciais').item.json.linkPreview }}"
            },
            {
              "name": "delay",
              "value": "={{ $('camposIniciais').item.json.Digitando }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "77c519d7-ce28-4cae-b789-d0c31e3c577a",
      "name": "Responde texto",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        680
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "content": "## PASSO 5 - ORGANIZA E ENVIA AS MENSAGENS PARA O CLIENTE",
        "height": 1034,
        "width": 1784,
        "color": 6
      },
      "id": "d1582984-9515-4a20-aa05-3b36eb6add9f",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        100,
        -80
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "0075d02a-c7bf-4971-a7f6-91476075d117",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        400,
        700
      ]
    },
    {
      "parameters": {},
      "id": "c07cdf42-00fd-4dc8-b910-0108024291fd",
      "name": "Replace Me1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        780,
        680
      ]
    },
    {
      "parameters": {},
      "id": "9a2d19c6-a79c-431c-86b8-e85af43737fc",
      "name": "no.op2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1700,
        660
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "60f6cbe5-e1ed-446f-a7f9-abb9a7021251",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1120,
        360
      ]
    },
    {
      "parameters": {
        "amount": 1.2
      },
      "id": "805310a9-b869-41a6-a061-114e340a2f55",
      "name": "1,2s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1480,
        500
      ],
      "webhookId": "8a810ad6-4ecf-4781-aed8-7f2b295770dc"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "87348d82-b7a7-4aa5-b433-d9d75b18b4d8",
      "name": "Segmentos",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        660,
        360
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b391fd12-8914-41a0-9218-c1aab9d33053",
      "name": "OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        180,
        700
      ],
      "credentials": {
        "openAiApi": {
          "id": "TJb8CFfEt4SRVUHE",
          "name": "OpenAi - rec. de vendas"
        }
      }
    },
    {
      "parameters": {
        "content": "### - Prepara a resposta do Agente para enviar para o Lead [Parser Chain]\n\n### - Envia cada mensagem de uma vez a partir de um Loop e da conexão API com a sua instância da Evolution API [Responde texto]\n\n** Esta parte da automação é destinada para preparar a resposta que chega do Agente de IA via conexão API com o Chat GPT e enviar para o seu Lead.\n",
        "height": 200,
        "width": 1100,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        140,
        60
      ],
      "typeVersion": 1,
      "id": "69967b42-7f6f-4cf9-b1cb-f13670a93a36",
      "name": "Sticky Note26"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-03-13T20:28:26.029Z",
  "versionId": "eda57335-593e-42df-b5f6-885b651a93e6"
}