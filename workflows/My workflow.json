{
  "active": false,
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Notion1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Buscar lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ARQUIVA LEAD REPETIDO": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Envia primeira mensagem da thread1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "ARQUIVA LEAD REPETIDO",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "adiciona cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "adiciona cliente": {
      "main": [
        [
          {
            "node": "Envia primeira mensagem da thread1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar lead": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Notion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "volta amanhã",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-01T17:23:12.838Z",
  "id": "BsfX046rZUBVi7bu",
  "isArchived": true,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "content": "## IA\n- FALA QUE É IA E PEDE SEI LA PRA PESSOA TESTAR\nFALA DA EMPRESA\nTIRA DUVIDAS\nE MANDA UMA CTA",
        "height": 248,
        "width": 432
      },
      "id": "411d1233-908c-4ff5-8212-490461476f2e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -440,
        800
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "event": "pagedUpdatedInDatabase",
        "databaseId": {
          "__rl": true,
          "value": "1c037fac-7498-8049-bfed-c202fa8d8e81",
          "mode": "list",
          "cachedResultName": "Leads",
          "cachedResultUrl": "https://www.notion.so/1c037fac74988049bfedc202fa8d8e81"
        },
        "simple": false
      },
      "id": "f5972ebb-c944-4fa9-ad03-1b0ad94798d9",
      "name": "Notion Trigger",
      "type": "n8n-nodes-base.notionTrigger",
      "typeVersion": 1,
      "position": [
        -580,
        800
      ],
      "disabled": true
    },
    {
      "parameters": {
        "amount": 3
      },
      "id": "b8c2d24e-aa6f-4aac-8e15-4e69c5e34561",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        620,
        780
      ],
      "webhookId": "d2526401-4e17-437f-9120-82ef6db1335f",
      "disabled": true
    },
    {
      "parameters": {
        "batchSize": 3,
        "options": {}
      },
      "id": "80ebd307-4e67-4fee-9f80-9f708ecdc0a9",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        20,
        800
      ],
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Código JavaScript para n8n - Gestão de Contatos de Advogados\n\n// Defina os contatos\nconst contatos = [\n  {\n    nome: \"Advogado Divórcio em Curitiba\",\n    telefone: \"+55 41 3015-9090\",\n    tipo: \"Divórcio\"\n  },\n  {\n    nome: \"Geziel Viana Advocacia - Advogado de Família Curitiba\",\n    telefone: \"+55 41 99754-3616\",\n    tipo: \"Família\"\n  },\n  {\n    nome: \"Ricardo Santos Lima - Advogado de Família em Curitiba\",\n    telefone: \"+55 41 98853-8575\",\n    tipo: \"Família\"\n  },\n  {\n    nome: \"BARIONI E MACEDO ADVOGADOS - Advocacia Empresarial e Imobiliária\",\n    telefone: \"+55 41 3081-2776\",\n    tipo: \"Empresarial/Imobiliária\"\n  },\n  {\n    nome: \"Yamamoto Advogados\",\n    telefone: \"+55 41 3224-3890\",\n    tipo: \"Geral\"\n  },\n  {\n    nome: \"Advogado Aposentadoria / LOAS Curitiba\",\n    telefone: \"+55 41 98866-9377\",\n    tipo: \"Previdenciário\"\n  },\n  {\n    nome: \"Alexander Advogados\",\n    telefone: \"+55 48 3207-0927\",\n    tipo: \"Geral\"\n  },\n  {\n    nome: \"Barriunuevo Advocacia Especializada em Acidentes\",\n    telefone: \"+55 41 98784-1759\",\n    tipo: \"Acidente\"\n  },\n  {\n    nome: \"Perusso da Costa Advocacia\",\n    telefone: \"+55 41 99986-1551\",\n    tipo: \"Geral\"\n  },\n  {\n    nome: \"Manzzatto Advocacia | Advogada Previdenciária em Curitiba\",\n    telefone: \"+55 41 99811-0582\",\n    tipo: \"Previdenciário\"\n  }\n];\n\n// Obtenha os dados de entrada (se houver)\nconst inputData = $input.all();\nconst queryParams = inputData.length > 0 && inputData[0].json ? inputData[0].json : {};\n\n// Função para filtrar por tipo (se o parâmetro for fornecido)\nfunction processarDados() {\n  let resultado = contatos;\n  \n  // Se um tipo específico for solicitado, filtre os contatos\n  if (queryParams.tipo) {\n    resultado = contatos.filter(contato => \n      contato.tipo.toLowerCase() === queryParams.tipo.toLowerCase()\n    );\n  }\n  \n  // Se um termo de busca for fornecido\n  if (queryParams.busca) {\n    const termo = queryParams.busca.toLowerCase();\n    resultado = contatos.filter(contato => \n      contato.nome.toLowerCase().includes(termo) || \n      contato.telefone.includes(termo)\n    );\n  }\n  \n  // Retorne os resultados como um array de objetos (um objeto por item)\n  return resultado.map(contato => {\n    return {\n      json: contato\n    };\n  });\n}\n\n// O n8n espera que você retorne um array de objetos\nreturn processarDados();"
      },
      "id": "97197a03-1553-4962-962f-6c8fe7cc3cca",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        800
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "1c037fac-7498-8049-bfed-c202fa8d8e81",
          "mode": "list",
          "cachedResultName": "Leads",
          "cachedResultUrl": "https://www.notion.so/1c037fac74988049bfedc202fa8d8e81"
        },
        "title": "CLIENTE TESTE",
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Telefone|phone_number",
              "phoneValue": "={{ $json.telefone }}"
            },
            {
              "key": "Responsável|people",
              "peopleValue": [
                "103d872b-594c-8141-8ec9-000211d20523"
              ]
            },
            {
              "key": "Nome|title",
              "title": "={{ $json.nome }}"
            }
          ]
        },
        "options": {}
      },
      "id": "724a2a80-8407-4149-8c70-4398dfd81126",
      "name": "Notion1",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        400,
        800
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f5ca2be8-619a-44e1-a672-c1302e4ce0f8",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        40,
        160
      ]
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "1c037fac-7498-8049-bfed-c202fa8d8e81",
          "mode": "list",
          "cachedResultName": "Leads",
          "cachedResultUrl": "https://www.notion.so/1c037fac74988049bfedc202fa8d8e81"
        },
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "key": "Status|status",
              "condition": "equals",
              "statusValue": "Primeira mensagem"
            }
          ]
        },
        "options": {}
      },
      "id": "9617f9ee-d6f8-479f-a791-7327d8d0fda0",
      "name": "Notion",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        -160,
        160
      ]
    },
    {
      "parameters": {
        "operation": "archive",
        "pageId": {
          "__rl": true,
          "value": "={{ $('Loop Over Items1').item.json.id }}",
          "mode": "id"
        }
      },
      "id": "0ea0bf7c-4e80-4544-b3c7-b8baa363049c",
      "name": "ARQUIVA LEAD REPETIDO",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        640,
        60
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.euatendoem123.com/message/sendText/150whatsapp",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "=9a5da6bfd2e20e6320391dbf86cf2954"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('Loop Over Items1').item.json.property_telefone }}\",\n  \"options\": {\n    \"delay\": 1800,\n    \"presence\": \"composing\"\n  },\n  \"textMessage\": {\n    \"text\": \"Olá! Me chamo Higor e sou especialista em automações com IA. Quero te mostrar como a inteligência artificial pode otimizar seu negócio, aumentar suas vendas e economizar tempo. Posso te apresentar algumas soluções que fazem sentido para você? É com você mesmo que posso falar?\"\n  }\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "e656845f-8326-4c9d-9b2e-960788a001b4",
      "name": "Envia primeira mensagem da thread1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        840,
        240
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 30
      },
      "id": "600bf1e6-3dac-4dee-9e79-a0c9b3879cf6",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1060,
        160
      ],
      "webhookId": "7568e4fd-cd46-4467-8ef0-ef9894678262"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "014760c6-2218-40d2-b357-7c7b17c34e3e",
              "leftValue": "={{ $json.name }}",
              "rightValue": "Primeira mensagem",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "38039521-4497-44eb-9206-089493be0a44",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        160
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "operation_database_clients",
          "mode": "list",
          "cachedResultName": "operation_database_clients"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "phone": "={{ $('Loop Over Items1').item.json.property_telefone }}",
            "name": "={{ $('Loop Over Items1').item.json.property_nome }}",
            "status": "={{ $('Loop Over Items1').item.json.property_status }}",
            "source": "={{ $('Loop Over Items1').item.json.property_sele_o }}",
            "email": "={{ $('Loop Over Items1').item.json.property_e_mail }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "source",
              "displayName": "source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "059df68b-aa6f-4a01-b338-907bf70634c9",
      "name": "adiciona cliente",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        640,
        240
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "operation_database_clients",
          "mode": "list",
          "cachedResultName": "operation_database_clients"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "where": {
          "values": [
            {
              "column": "phone",
              "value": "={{ $json.property_telefone }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ddde7e7a-f51b-45aa-ac97-19a04a17a547",
      "name": "Buscar lead",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        240,
        160
      ],
      "executeOnce": false,
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "incr",
        "key": "leadsiautomatize",
        "expire": true,
        "ttl": 43200
      },
      "id": "a6cb926b-bac6-49d4-8038-87feabd28d7d",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1260,
        160
      ]
    },
    {
      "parameters": {},
      "id": "c8741c13-4686-4ec7-b3ad-4ad938d8ee5c",
      "name": "volta amanhã",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1680,
        160
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 0 8 * * 1-5"
            }
          ]
        }
      },
      "id": "9454480e-4dd0-412c-af4d-ffb22b8646ce",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -360,
        160
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8805cbe0-320d-405a-942a-848df3101378",
              "leftValue": "={{ $json.leadsiautomatize }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b7fde226-79d8-416e-b018-e0105bfa2246",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1480,
        160
      ]
    }
  ],
  "pinData": {
    "Notion Trigger": [
      {
        "json": {
          "object": "page",
          "id": "1c037fac-7498-802d-9e66-e82c51110e52",
          "created_time": "2025-03-24T17:54:00.000Z",
          "last_edited_time": "2025-03-27T13:26:00.000Z",
          "created_by": {
            "object": "user",
            "id": "48487a56-349a-405d-9b12-4d4371fd3317"
          },
          "last_edited_by": {
            "object": "user",
            "id": "1c0d872b-594c-8155-b805-0002743b802f"
          },
          "cover": null,
          "icon": {
            "type": "external",
            "external": {
              "url": "https://www.notion.so/icons/iterate_blue.svg"
            }
          },
          "parent": {
            "type": "database_id",
            "database_id": "1c037fac-7498-8049-bfed-c202fa8d8e81"
          },
          "archived": false,
          "in_trash": false,
          "properties": {
            "Prioridade": {
              "id": "Fzds",
              "type": "select",
              "select": null
            },
            "E-mail": {
              "id": "Lc%3Ev",
              "type": "email",
              "email": null
            },
            "Responsável": {
              "id": "OAFS",
              "type": "people",
              "people": []
            },
            "Data de Reunião": {
              "id": "O%5D%3Do",
              "type": "date",
              "date": null
            },
            "Data de início": {
              "id": "UAg%3F",
              "type": "date",
              "date": null
            },
            "Orçamento": {
              "id": "%5EIXp",
              "type": "number",
              "number": null
            },
            "Telefone": {
              "id": "_KVx",
              "type": "phone_number",
              "phone_number": "5511984151865"
            },
            "URL": {
              "id": "b%5DsX",
              "type": "url",
              "url": null
            },
            "Seleção": {
              "id": "fgq%60",
              "type": "select",
              "select": null
            },
            "Status": {
              "id": "ok%3F%3F",
              "type": "status",
              "status": {
                "id": "2882bc4e-da9f-4eb2-a695-c9b64a3c9899",
                "name": "Primeira mensagem",
                "color": "default"
              }
            },
            "Nome": {
              "id": "title",
              "type": "title",
              "title": [
                {
                  "type": "text",
                  "text": {
                    "content": "Higor teste",
                    "link": null
                  },
                  "annotations": {
                    "bold": false,
                    "italic": false,
                    "strikethrough": false,
                    "underline": false,
                    "code": false,
                    "color": "default"
                  },
                  "plain_text": "Higor teste",
                  "href": null
                }
              ]
            }
          },
          "url": "https://www.notion.so/Higor-teste-1c037fac7498802d9e66e82c51110e52",
          "public_url": null
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-01T17:22:31.018Z",
      "updatedAt": "2025-08-01T17:22:31.018Z",
      "id": "Ad3I36pm69HByCk6",
      "name": "Atendimentos IA"
    },
    {
      "createdAt": "2025-08-01T17:23:03.188Z",
      "updatedAt": "2025-08-01T17:23:03.188Z",
      "id": "qqUtE7uOmONlm77S",
      "name": "IAutomatize"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-08-01T17:24:04.022Z",
  "versionId": "66e736cc-4abf-43ec-a405-f3d7a50547d1"
}