{
  "active": false,
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Search files and folders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Get a document": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search files and folders": {
      "main": [
        [
          {
            "node": "Get a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-11T05:09:44.358Z",
  "id": "oJPb7BEDZz16etjR",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Agente de RAG + Reranker",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1520,
        -144
      ],
      "id": "6723f7ca-6758-4279-b1c6-49493cfb9c2f",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -160,
        64
      ],
      "id": "f4eaeb4c-5c4e-4ed2-aec3-1eed5f364644",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $('Loop Over Items').item.json.conteudo_parte }}",
        "textSplittingMode": "custom",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "Modulo",
                "value": "={{ $('Loop Over Items').item.json.modulo }}"
              },
              {
                "name": "Aula",
                "value": "={{ $('Loop Over Items').item.json.aula }}"
              },
              {
                "name": "Parte",
                "value": "={{ $('Loop Over Items').item.json.parte }}"
              }
            ]
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        96,
        48
      ],
      "id": "85fcea0d-5db5-4f86-ab33-0c77070cd192",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "ps_curso",
          "mode": "list",
          "cachedResultName": "ps_curso"
        },
        "options": {
          "queryName": "match_ps_curso"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        -64,
        -176
      ],
      "id": "d0a17703-37ee-44c9-b416-c2bc49374ece",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "QiHN5zEBNyZ0P663",
          "name": "Supabase - Sorveteiro Raiz"
        }
      }
    },
    {
      "parameters": {
        "content": "## VETORIZADOR",
        "height": 748,
        "width": 2244,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1616,
        -368
      ],
      "typeVersion": 1,
      "id": "cc2296db-43c5-44d8-aa95-f05a11d86d19",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "chunkSize": 26000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        208,
        192
      ],
      "id": "d72c7c8e-3d55-48c9-8ba1-3768542f2f2c",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "={{ $json.id }}"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        -1088,
        -144
      ],
      "id": "31fb455f-091e-432a-8e2e-f7a60cf6fdcb",
      "name": "Get a document",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "7TJ0i7jDnGNCXmQR",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -608,
        -144
      ],
      "id": "147839dc-4d41-43da-9165-ccb24437a8c3",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        288,
        -176
      ],
      "id": "be0184aa-677c-4734-b6af-6a824fe3331c",
      "name": "Wait",
      "webhookId": "eb2139c1-1fc3-4aa3-8b0a-d7462a11c68d",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "1oCGUfrvJ9xFICEImoroGv4mFwMjbFctZ",
            "mode": "list",
            "cachedResultName": "Modulo 2 ",
            "cachedResultUrl": "https://drive.google.com/drive/folders/1oCGUfrvJ9xFICEImoroGv4mFwMjbFctZ"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1296,
        -144
      ],
      "id": "72d21ade-41a8-47f6-bdcf-1fba303ede35",
      "name": "Search files and folders",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "Fj0pGWTsgTW5yLNC",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "03a9bb27-f540-44e7-8c2a-98a996676128",
              "name": "content",
              "value": "={{ $json.texto_original }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -368,
        -128
      ],
      "id": "9b066bd6-612c-46ae-8e04-96eee03fc678",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "// Define o tamanho máximo de caracteres para cada pedaço de conteúdo.\nconst chunkSize = 2000; // Ajuste este valor conforme a necessidade do seu BD/Metabase.\nconst outputItems = []; \n\nfor (const item of items) {\n    // 1. EXTRAÇÃO E LIMPEZA DO TÍTULO DO MÓDULO E AULA\n    const fullText = item.json.content || ''; // O conteúdo completo\n    const documentId = item.json.documentId;\n    \n    // Tenta pegar a linha do Módulo/Título\n    const moduleMatch = fullText.match(/Módulo \\d{2}(.*?)\\n/i); \n    const tituloCompleto = moduleMatch ? moduleMatch[0].trim() : \"Módulo/Aula Não Encontrados\";\n\n    let modulo = 'Módulo Desconhecido';\n    let aula = 'Aula Desconhecida';\n    \n    const parts = tituloCompleto.split(' - ', 2); \n    if (parts.length > 0) {\n        // Tenta isolar o Módulo (ex: \"Módulo 04\")\n        const moduloMatch = parts[0].match(/Módulo \\d{2}/i);\n        modulo = moduloMatch ? moduloMatch[0].trim() : 'Módulo Desconhecido';\n        \n        // Assume o resto como o nome da Aula\n        let nomeAulaCompleto = tituloCompleto.replace(new RegExp(`^${modulo}\\\\s*-\\\\s*`), '').trim();\n\n        // **NOVO AJUSTE: Remove \" - Parte X\" do final do nome da Aula**\n        aula = nomeAulaCompleto.replace(/ - Parte\\s*\\d+$/i, '').trim(); \n        // Ex: \"Processos Produtora Contínua - Parte 1\" -> \"Processos Produtora Contínua\"\n    }\n\n\n    if (!fullText) {\n        // Trata o caso de conteúdo vazio\n        outputItems.push({\n            json: {\n                documentId: documentId,\n                modulo: modulo,\n                aula: aula,\n                parte: 1,\n                conteudo_parte: \"Conteúdo vazio ou não encontrado.\",\n            }\n        });\n        continue;\n    }\n\n    // 2. LÓGICA DE QUEBRA POR PARTES\n    let startIndex = 0;\n    let partNumber = 1;\n\n    while (startIndex < fullText.length) {\n        let endIndex = startIndex + chunkSize;\n        \n        if (endIndex > fullText.length) {\n            endIndex = fullText.length;\n        } else {\n            // Busca o último espaço para quebrar o texto sem cortar palavras\n            const safeIndex = fullText.substring(startIndex, endIndex).lastIndexOf(' ');\n\n            if (safeIndex > -1) {\n                endIndex = startIndex + safeIndex;\n            }\n        }\n        \n        // Extrai o pedaço de texto e remove espaços extras\n        const chunk = fullText.substring(startIndex, endIndex).trim();\n        \n        // 3. CRIAÇÃO DO NOVO ITEM PARA O N8N\n        outputItems.push({\n            json: {\n                documentId: documentId,\n                modulo: modulo,      // Ex: \"Módulo 04\"\n                aula: aula,          // Ex: \"Processos Produtora Contínua\" (Sem a parte)\n                parte: partNumber,   // Número sequencial da parte (1, 2, 3...)\n                conteudo_parte: chunk, // O pedaço de texto\n            }\n        });\n\n        // Prepara para o próximo loop\n        startIndex = endIndex;\n        while (fullText[startIndex] === ' ' && startIndex < fullText.length) {\n            startIndex++;\n        }\n        \n        partNumber++;\n    }\n}\n\nreturn outputItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -848,
        -144
      ],
      "id": "865989c9-2deb-4cf1-a99f-684341baedae",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "```\n$$$$$$\\   $$\\   $$\\ $$$$$$$\\   $$$$$$\\  $$$$$$$\\$$$$$$$$\\ $$$$$$$$\\ \n$$  __$$\\ $$ |  $$ |$$  __$$\\ $$  __$$\\ $$  __$$\\\\__$$  __|$$  _____|\n$$ /  \\__|$$ |  $$ |$$ |  $$ |$$ /  $$ |$$ |  $$ |  $$ |   $$ |      \n\\$$$$$$\\  $$ |  $$ |$$$$$$$  |$$ |  $$ |$$$$$$$  |  $$ |   $$$$$\\    \n \\____$$\\ $$ |  $$ |$$  ____/ $$ |  $$ |$$  __$$    $$ |   $$  __|   \n$$\\   $$ |$$ |  $$ |$$ |      $$ |  $$ |$$ |  $$ |  $$ |   $$ |      \n\\$$$$$$  |\\$$$$$$  |$$ |      \\$$$$$$  |$$ |  $$ |  $$ |   $$$$$$$$\\ \n \\______/  \\______/ \\__|       \\______/ \\__|  \\__|  \\__|   \\________|\n```",
        "height": 180,
        "width": 680,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -896,
        -608
      ],
      "typeVersion": 1,
      "id": "55ffb3c8-bf92-4043-864d-73a1e6777e44",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-07-11T05:09:44.358Z",
      "updatedAt": "2025-07-11T05:09:44.358Z",
      "role": "workflow:owner",
      "workflowId": "oJPb7BEDZz16etjR",
      "projectId": "MnGFQuvoDMTHLtMd"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-07-11T05:08:17.050Z",
      "updatedAt": "2025-07-11T05:08:17.050Z",
      "id": "at11ZIwIDccBfgnS",
      "name": "Youtube"
    },
    {
      "createdAt": "2025-07-11T05:08:17.035Z",
      "updatedAt": "2025-07-11T05:08:17.035Z",
      "id": "MjlWgQ1bNOy1eHbS",
      "name": "Anderson Adelino"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-10-17T05:29:53.621Z",
  "versionId": "e3a7e72f-c393-46b7-87fc-bda1207c2708"
}