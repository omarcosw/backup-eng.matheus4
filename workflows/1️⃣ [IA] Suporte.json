{
  "active": false,
  "connections": {
    "Switch2": {
      "main": [
        [
          {
            "node": "espera evolution processar",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "empilhaTexto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Mensagem não suportada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaÁudio": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaTexto": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "espera evolution processar": {
      "main": [
        [
          {
            "node": "transforma audio em binary1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transforma audio em binario2": {
      "main": [
        [
          {
            "node": "transcreve audio2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transforma audio em binary1": {
      "main": [
        [
          {
            "node": "transforma audio em binario2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcreve audio2": {
      "main": [
        [
          {
            "node": "empilhaÁudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtem": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "NoOp.1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Deleta1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta1": {
      "main": [
        [
          {
            "node": "messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "camposIniciais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "camposIniciais": {
      "main": [
        [
          {
            "node": "NoOp.4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UnificaDados": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp.4": {
      "main": [
        [
          {
            "node": "UnificaDados",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Prompts": {
      "main": [
        [
          {
            "node": "UnificaDados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain1": {
      "main": [
        [
          {
            "node": "Segmentos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Responde texto": {
      "main": [
        [
          {
            "node": "1,2s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "NoOp.",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vendedor IA": {
      "main": [
        [
          {
            "node": "Parser  Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "messages": {
      "main": [
        [
          {
            "node": "Vendedor IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Responde texto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aulas": {
      "ai_tool": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getcompra": {
      "ai_tool": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-03T16:02:10.735Z",
  "id": "X9Uak79ajqH8qPgV",
  "isArchived": true,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "1️⃣ [IA] Suporte",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0cb14635-2673-408e-86db-ce9e0373674b",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "60065893-74f7-4b64-bc1a-d891202efa78",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            }
          ]
        },
        "options": {}
      },
      "id": "156b18f5-9294-45cf-86c1-8b2c5d5e7b0a",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        20,
        300
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 1 - CREDENCIAIS, DADOS",
        "height": 374,
        "width": 839,
        "color": 7
      },
      "id": "67b0846d-74a1-4b26-ab83-06829d9d0904",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -880,
        160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9ecf2fc-da2c-4f44-897a-5dc0a2f2f379",
              "name": "meta.telefoneCliente",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"remoteJid\"] }}",
              "type": "string"
            },
            {
              "id": "a019046c-3b5a-4fd0-a497-de55cb2178ea",
              "name": "meta.telefoneEmpresa",
              "value": "={{ $json.body.sender }}",
              "type": "string"
            },
            {
              "id": "dab7ca54-c3d2-4a36-a9ca-a0ebbd375ef5",
              "name": "meta.nomeCliente",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "01238a36-6907-4aec-ab21-26345ed5fc96",
              "name": "whatsapp.evo.nomeInstancia",
              "value": "={{ $json.body.instance || null }}",
              "type": "string"
            },
            {
              "id": "81612acf-1b66-4c8e-82e4-ce8c77b31334",
              "name": "content.mensagem",
              "value": "={{ \n  $json.body?.content || \n\n  $json.body?.data?.message?.extendedTextMessage?.text || \n  $json.body?.data?.message?.imageMessage?.caption || \n  $json.body?.data?.message?.conversation || \n  $json?.message?.text || \n  $json?.message?.caption || \n  null \n}}",
              "type": "string"
            },
            {
              "id": "cc7dcfe1-8ad7-4fe8-93ec-8f643c7d08c7",
              "name": "content.tipoMensagem",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "2dfc64f4-b222-4ea7-b095-fdd96d9fcb95",
              "name": "content.idMensagem",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "9d947263-3b68-4c63-88ba-ef1b9de22571",
              "name": "empresa.nomeEmpresa",
              "value": "Danilo Meidas",
              "type": "string"
            },
            {
              "id": "076ad2d4-b8ea-440f-9c02-f7e8417a984d",
              "name": "whatsapp.evo.apikey",
              "value": "={{ $json.body.apikey || null }}",
              "type": "string"
            },
            {
              "id": "0c237725-0428-4f1d-bddf-41bd289b3168",
              "name": "whatsapp.evo.server_url",
              "value": "={{ $json.body.server_url || null }}",
              "type": "string"
            },
            {
              "id": "255b9c45-7769-4d09-9c50-61dcdfb7c09d",
              "name": "app.debouncerTime",
              "value": "8",
              "type": "string"
            },
            {
              "id": "196aeb96-5c33-4dd7-9a4f-6bd40765b7fb",
              "name": "doc.id",
              "value": "1Yo4wzv6EnwnjZJ_Ou1dTkKsuA8iDp1xZfADxqAm62LA",
              "type": "string"
            },
            {
              "id": "fc7c5c8f-b505-4a43-ae07-51eea58d6f80",
              "name": "linkPreview",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "e30bbf8c-d5da-4410-b875-8dfe4b301798",
              "name": "Digitando",
              "value": 2400,
              "type": "number"
            },
            {
              "id": "c4f557bd-72f1-4507-8d9d-c2a590eea2b8",
              "name": "content.quoted",
              "value": "={{ $json.body.data.message.conversation }}\n{{ $json.body.data.message.imageMessage.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c5dbe4ae-b933-4013-84db-33b2e539fc6a",
      "name": "camposIniciais",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        300
      ],
      "notesInFlow": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('Webhook').item.json.body.data.message.speechToText, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "9051a4cd-16b9-4132-8815-24df65e41490",
      "name": "empilhaÁudio",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        920,
        100
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('camposIniciais').item.json.content.mensagem, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "768fc77f-f1b9-40d3-a715-087e6a0d9666",
      "name": "empilhaTexto",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        380,
        300
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## PASSO 3 - DEFINE O TIPO DE MENSAGEM E ORGANIZA PARA O AGENTE",
        "height": 634,
        "width": 1539,
        "color": 7
      },
      "id": "377b5cfb-2a0b-4a2b-93de-02345faa6a9c",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais').item.json.whatsapp.evo.server_url }}/message/sendText/{{ $('camposIniciais').item.json.whatsapp.evo.nomeInstancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('camposIniciais').item.json.whatsapp.evo.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('camposIniciais').item.json.meta.telefoneCliente }}"
            },
            {
              "name": "text",
              "value": "=Infelizmente não consigo entender imagens, poderia enviar um texto ou áudio?"
            },
            {
              "name": "linkPreview",
              "value": "={{ $('camposIniciais').item.json.linkPreview }}"
            },
            {
              "name": "delay",
              "value": "={{ $('camposIniciais').item.json.Digitando }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "510d7901-8645-4ef9-8dd7-6690fb8a2ecf",
      "name": "Mensagem não suportada",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        500
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "1266f4ed-a642-4b13-88e2-98525753e42d",
      "name": "espera evolution processar",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        220,
        100
      ],
      "webhookId": "8ae10f5c-5f7c-4288-b75d-e3d415e5798c"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "={{ $json.mediaType }}",
          "mimeType": "=audio/ogg"
        }
      },
      "id": "fe625c26-ddbd-4a57-bb33-457e83b8650d",
      "name": "transforma audio em binario2",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        560,
        100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais').item.json.whatsapp.evo.server_url }}/chat/getBase64FromMediaMessage/{{ $item(\"0\").$node[\"camposIniciais\"].json[\"whatsapp\"][\"evo\"][\"nomeInstancia\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"whatsapp\"][\"evo\"][\"apikey\"] }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"message\": {\n        \"key\": {\n            \"id\": \"{{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"id\"] }}\"\n        }\n    },\n    \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "5bb057fb-05db-4b9c-957f-835849cd819f",
      "name": "transforma audio em binary1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        380,
        100
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        740,
        100
      ],
      "id": "b36d4b9b-0fae-4e00-aa73-f1865579b307",
      "name": "transcreve audio2",
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "options": {}
      },
      "id": "b194adec-b696-4d58-93f9-f83a5431c611",
      "name": "Obtem",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        720,
        300
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ \n  $json.message.length > 8 \n  ? $('camposIniciais').item.json.content.idMensagem\n  : JSON.parse($json.message.first()).message_id.toString().trim()\n}}",
                    "rightValue": "={{ $('camposIniciais').item.json.content.idMensagem.toString().trim() }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "3ef3fa63-b2fe-4314-a8c9-b035c913424c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "nada a fazer"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2b9b7794-e8f6-45b5-8021-f59dbb747cb0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus($('camposIniciais').item.json.app.debouncerTime, 'seconds') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "proceder"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "esperar"
        }
      },
      "id": "271337d3-38e8-4139-860f-c26a15efdc65",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1040,
        300
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}"
      },
      "id": "00869788-a392-45c5-83e4-899fc024952b",
      "name": "Deleta1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1400,
        300
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": "={{ $('camposIniciais').item.json.app.debouncerTime }}"
      },
      "id": "e3636620-e180-4fdc-8ffc-905ee4855874",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1240,
        420
      ],
      "webhookId": "6e7cf6ee-1256-4be0-965f-a70ee9e26fba"
    },
    {
      "parameters": {},
      "id": "749c651f-3a8a-4ed5-95e9-32ee531e0c60",
      "name": "NoOp.1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1240,
        180
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "suportesorveteiro",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -820,
        300
      ],
      "id": "68a3ab1c-f77c-45cb-824c-5ab86784c2dc",
      "name": "Webhook",
      "webhookId": "7d1ee740-2fda-4cfb-87e9-44e385849491"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "b7a9dedd-63b7-459d-bd1e-6eeef5a94e5d",
      "name": "UnificaDados",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -180,
        300
      ],
      "notesInFlow": true,
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "fd036569-f75b-441a-8abf-c41a075a2227",
      "name": "NoOp.4",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -380,
        380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "aa4d5d29-e6f1-4bce-b5ff-4575b553a077",
              "name": "systemMessageAgente",
              "value": "=<agent>\n  <identity>\n    <name>Danilo Meidas</name>\n    <persona>mentor direto, caloroso e humano</persona>\n    <presentation>oi {{(() => {\n  const nome = $json.meta.nomeCliente;\n  return nome.split(' ')[0]; // Retorna a primeira palavra\n})()}}, Suporte ao aluno Sorveteiro aqui. já salva aí, tamo junto.</presentation>\n    <conceal_identity>true</conceal_identity>\n  </identity>\n\n  <start_message>\n    <auto_intro>\n      opa, tudo certo? essa é uma mensagem automática apenas pra verificar se você é um de nossos alunos.  \n      antes de conversar com o danilo, por favor, pode me encaminhar seu email de compra?\n    </auto_intro>\n  </start_message>\n\n  <access_validation>\n    <tool_call>getcompra</tool_call>\n    <logic>\n      <if user_email=valid AND user_phone=valid>\n        <response>opa, boa tarde. tudo bem? danilo aqui. já vimos que você é um de nossos alunos. como posso te ajudar?</response>\n      </if>\n\n      <if user_email=valid AND user_phone=invalid>\n        <response>o email está correto, mas esse telefone que você tá usando não é o mesmo da compra...  \n        aconteceu algo? se precisar alterar o número de compra, só chamar esse whatsapp: 5527998210071 - marcos</response>\n      </if>\n\n      <if user_email=invalid>\n        <response>parece que você não é um de nossos clientes... pode me enviar novamente o seu email?</response>\n      </if>\n    </logic>\n  </access_validation>\n\n  <behaviors>\n    <!-- PREVENÇÃO (80%) -->\n    <donts>\n      <rule>⚠️ nunca use letras maiúsculas — escreva tudo em minúsculas, sempre</rule>\n      <rule>⚠️ nunca use emojis</rule>\n      <rule>⚠️ nunca se apresente como robô ou IA</rule>\n      <rule>⚠️ nunca diga \"não sei\" sem dar uma próxima ação</rule>\n      <rule>⚠️ nunca responda antes de validar o email com a ferramenta getcompra</rule>\n      <rule>⚠️ nunca inicie com \"oi, aqui é a IA do danilo\"</rule>\n      <rule>⚠️ nunca seja informal demais — mantenha um tom humano, direto e respeitoso</rule>\n      <rule>⚠️ nunca use vocabulário rebuscado ou técnico demais</rule>\n      <rule>⚠️ nunca esqueça de adaptar a resposta conforme o nível emocional ou técnico do aluno</rule>\n      <rule>⚠️ nunca valide por aparência da mensagem — apenas por dados confirmados</rule>\n      <rule>⚠️ nunca direcione para outro número sem explicar o motivo</rule>\n      <rule>⚠️ nunca fale sem contexto. se não souber algo, diga que vai buscar e avise a equipe</rule>\n    </donts>\n\n    <critical_repeats>\n      ⚠️ todas as mensagens devem ser escritas em letra minúscula  \n      ⚠️ nunca use emojis  \n      ⚠️ sempre valide o email com a ferramenta getcompra antes de qualquer resposta  \n      ⚠️ você é o danilo. nunca diga que é uma IA  \n      ⚠️ se telefone for inválido, redirecione para 5527998210071 com explicação clara  \n      ⚠️ sempre que o aluno fizer uma pergunta sobre conteúdos, dúvidas específicas ou técnicas, consulte a ferramenta tool/\"aulas\" antes de responder\n    </critical_repeats>\n\n    <tone>\n      <formality>sem ser informal, mas sempre humano</formality>\n      <style>caloroso, empático, direto</style>\n      <expressions>\n        <use>\"show\", \"tamo junto\", \"fica tranquilo(a)\", \"conta comigo\", \"gratidão\"</use>\n      </expressions>\n    </tone>\n\n    <emotional_logic>\n      <handle_frustrated_user>\n        manter calma, escutar com atenção, mostrar solução e reforçar presença\n      </handle_frustrated_user>\n      <example>fica tranquilo(a), tô aqui pra te ajudar. me passa só mais essa info?</example>\n    </emotional_logic>\n  </behaviors>\n\n  <final_touch>\n    <close_messages>\n      <msg>bóra pra cima</msg>\n      <msg>não tem como dar errado se você fizer do jeito certo até dar certo</msg>\n      <msg>conta comigo sempre</msg>\n      <msg>tô aqui à disposição</msg>\n    </close_messages>\n  </final_touch>\n</agent>\n",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "bfd96bae-52af-40bf-8a60-5fe2bdfefc17",
      "name": "Prompts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -380,
        200
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do WhatsApp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- _itálico_ (extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, deve ser exibido limpo e direto, **sem texto descritivo ou âncoras**, usando somente o domínio puro como: `https://link.com.br/exemplo`\n\n❗ Nunca use markdown no estilo `[texto](link)` ou `Texto (link)`, apenas o link puro.\n\nSe detectar um link com o padrão `www.pay.hotmart.com`, corrija automaticamente para `pay.hotmart.com`, pois o domínio com www não funciona."
            }
          ]
        }
      },
      "id": "3b4866f5-dc59-4a26-97fd-9050f1109794",
      "name": "Parser  Chain1",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        2400,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais').item.json.whatsapp.evo.server_url }}/message/sendText/{{ $('camposIniciais').item.json.whatsapp.evo.nomeInstancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('camposIniciais').item.json.whatsapp.evo.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('camposIniciais').item.json.meta.telefoneCliente }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            },
            {
              "name": "linkPreview",
              "value": "={{ $('camposIniciais').item.json.linkPreview }}"
            },
            {
              "name": "delay",
              "value": "={{ $('camposIniciais').item.json.Digitando }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "eb330871-e6d9-487d-88b0-c944620e8aa7",
      "name": "Responde texto",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3340,
        380
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "1",
        "contextWindowLength": 30
      },
      "id": "f3b37fd8-fdf9-4d89-8ab1-e2230ee9f941",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        1780,
        420
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "0d2cee43-da37-4f2f-b40b-a7d670e4f8ba",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2600,
        400
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "75b3f70b-0321-491e-8f13-6051e0d05790",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2960,
        200
      ]
    },
    {
      "parameters": {
        "amount": 1.2
      },
      "id": "a054880a-6f21-4f60-bd46-932a648458e9",
      "name": "1,2s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3520,
        380
      ],
      "webhookId": "e5987401-8b77-4a84-8693-25fd8898cd94"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "c249f2ee-4154-48df-bb94-8923698eb94d",
      "name": "Segmentos",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2740,
        200
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6f509a59-fb6a-4d60-a356-410855ee5d6f",
      "name": "OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2360,
        400
      ],
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d2c80255-47f1-4f14-88d3-909c53a4ed0b",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1640,
        420
      ],
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messages').all()[0].json.messages }}",
        "options": {
          "systemMessage": "={{ $('Prompts').item.json.systemMessageAgente }}"
        }
      },
      "id": "c9e4c01a-7454-4315-9fbc-5f0c6f09ba9f",
      "name": "Vendedor IA",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1860,
        200
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 3 - DEFINE O TIPO DE MENSAGEM E ORGANIZA PARA O AGENTE",
        "height": 514,
        "width": 619,
        "color": 7
      },
      "id": "03249503-76fc-4e8b-898b-a6af15b23762",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        80
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 3 - DEFINE O TIPO DE MENSAGEM E ORGANIZA PARA O AGENTE",
        "height": 574,
        "width": 1399,
        "color": 7
      },
      "id": "273d21f1-5012-41b5-9578-dbbe764a2b53",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2280,
        40
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7158aa0-84e0-44b1-8629-bf23fb4c0766",
              "name": "=messages",
              "value": "={{ (() => {\n  let messages = '';\n  let quoted = '';\n  let empilha = '';\n\n  // Primeira parte: join de mensagens\n  try {\n    messages = $json.message.map(buffer => JSON.parse(buffer).message).join('\\n');\n  } catch (e) {\n    messages = '';\n  }\n\n  // Segunda parte: conteúdo citado (quoted)\n  try {\n    quoted = $('camposIniciais').item.json.content?.quoted || '';\n  } catch (e) {\n    quoted = '';\n  }\n\n  // Terceira parte: verificar empilhaÁudio se foi executado\n  try {\n    empilha = $node[\"empilhaÁudio\"]?.json?.text || '';\n  } catch (e) {\n    empilha = '';\n  }\n\n  // Retornar tudo junto (separado por quebras de linha)\n  return [messages, quoted, empilha].filter(Boolean).join('\\n\\n');\n})() }}\n\n",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "81d7ffee-306b-49d3-85f4-8a41f8fbc770",
      "name": "messages",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        200
      ]
    },
    {
      "parameters": {},
      "id": "347bbf16-b8b3-4777-a47b-c5ec565813bb",
      "name": "NoOp.",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3160,
        120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7ed86f5e-fe26-45b2-ad31-3d42e43a5b82",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3100,
        320
      ],
      "id": "407d1ac8-89e4-4e91-b1a9-50fcabc12a88",
      "name": "If"
    },
    {
      "parameters": {
        "toolDescription": " Acione esta função quando houver consultas sobre alguma dessas aulas abaixo\n\n- Gatilho da prova\n\n- Nome do professor",
        "method": "POST",
        "url": "https://webhook.danilomeidas.com.br/webhook/prioridade",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "numero",
              "valueProvider": "fieldValue",
              "value": "={{ $('Switch2').item.json.id }}"
            },
            {
              "name": "resposta",
              "valueProvider": "fieldValue",
              "value": "={{ $('messages').item.json.messages }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        2100,
        420
      ],
      "id": "587b949f-aa40-46cb-8288-43afc455d141",
      "name": "aulas",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "toolDescription": "chame essa função/tool pra verificar se é um email valido",
        "method": "POST",
        "url": "https://webhook.danilomeidas.com.br/webhook/getcompra",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "email"
            },
            {
              "name": "numero",
              "valueProvider": "fieldValue",
              "value": "={{ $('Switch2').item.json.meta.telefoneCliente }}"
            }
          ]
        }
      },
      "id": "dfc98c73-a086-4df6-ad4e-00c7edb6e105",
      "name": "getcompra",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1960,
        420
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-06-11T22:42:45.628Z",
      "updatedAt": "2025-06-11T22:42:45.628Z",
      "id": "m42BGlmGiTC0MAsN",
      "name": "share"
    },
    {
      "createdAt": "2025-06-11T22:42:45.638Z",
      "updatedAt": "2025-06-11T22:42:45.638Z",
      "id": "5oC2tlQFcDwwZ3pH",
      "name": "Modelos Demo"
    },
    {
      "createdAt": "2025-06-11T22:42:45.655Z",
      "updatedAt": "2025-06-11T22:42:45.655Z",
      "id": "sYPrstghMuED8dfN",
      "name": "Aulas-GgNocode"
    },
    {
      "createdAt": "2025-07-03T16:02:09.110Z",
      "updatedAt": "2025-07-03T16:02:09.110Z",
      "id": "K5MFncsCBrk1389O",
      "name": "IA"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-07-07T12:56:49.195Z",
  "versionId": "ba327077-d766-47ac-8818-939beb341995"
}