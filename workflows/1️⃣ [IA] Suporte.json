{
  "active": true,
  "connections": {
    "Switch2": {
      "main": [
        [
          {
            "node": "espera evolution processar",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "empilhaTexto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "espera evolution processar imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaÁudio": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaTexto": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "espera evolution processar": {
      "main": [
        [
          {
            "node": "transforma audio em binary1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transforma audio em binario2": {
      "main": [
        [
          {
            "node": "transcreve audio2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transforma audio em binary1": {
      "main": [
        [
          {
            "node": "transforma audio em binario2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcreve audio2": {
      "main": [
        [
          {
            "node": "empilhaÁudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtem": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "NoOp.1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Deleta1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta1": {
      "main": [
        [
          {
            "node": "messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Ativar para teste",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "camposIniciais": {
      "main": [
        [
          {
            "node": "NoOp.4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UnificaDados": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp.4": {
      "main": [
        [
          {
            "node": "UnificaDados",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Prompts": {
      "main": [
        [
          {
            "node": "UnificaDados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain1": {
      "main": [
        [
          {
            "node": "Segmentos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Responde texto": {
      "main": [
        [
          {
            "node": "1,2s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "NoOp.",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Segmentos": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vendedor IA": {
      "main": [
        [
          {
            "node": "Parser  Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "messages": {
      "main": [
        [
          {
            "node": "Vendedor IA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Responde texto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "aulas": {
      "ai_tool": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getcompra": {
      "ai_tool": [
        [
          {
            "node": "Vendedor IA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "converte imagem": {
      "main": [
        [
          {
            "node": "transcreve imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcreve imagem": {
      "main": [
        [
          {
            "node": "empilhaÁudio1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "espera evolution processar imagem": {
      "main": [
        [
          {
            "node": "Busca imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca imagem": {
      "main": [
        [
          {
            "node": "converte imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "empilhaÁudio1": {
      "main": [
        [
          {
            "node": "Obtem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ativar para teste": {
      "main": [
        [
          {
            "node": "camposIniciais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-07T12:56:56.389Z",
  "id": "087ixBHzBvtGq2z3",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "1️⃣ [IA] Suporte",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0cb14635-2673-408e-86db-ce9e0373674b",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "60065893-74f7-4b64-bc1a-d891202efa78",
                    "leftValue": "={{ $('Webhook').item.json.body.data.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            }
          ]
        },
        "options": {}
      },
      "id": "adfd6d90-9aa7-467c-914e-2ccacc9b2d40",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        20,
        300
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 1 - CREDENCIAIS, DADOS",
        "height": 374,
        "width": 1099,
        "color": 7
      },
      "id": "f1907be2-5cdc-4a0b-8a7a-db83a2de8946",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1140,
        160
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9ecf2fc-da2c-4f44-897a-5dc0a2f2f379",
              "name": "meta.telefoneCliente",
              "value": "={{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"remoteJid\"] }}",
              "type": "string"
            },
            {
              "id": "a019046c-3b5a-4fd0-a497-de55cb2178ea",
              "name": "meta.telefoneEmpresa",
              "value": "={{ $json.body.sender }}",
              "type": "string"
            },
            {
              "id": "dab7ca54-c3d2-4a36-a9ca-a0ebbd375ef5",
              "name": "meta.nomeCliente",
              "value": "={{ $json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "01238a36-6907-4aec-ab21-26345ed5fc96",
              "name": "whatsapp.evo.nomeInstancia",
              "value": "={{ $json.body.instance || null }}",
              "type": "string"
            },
            {
              "id": "81612acf-1b66-4c8e-82e4-ce8c77b31334",
              "name": "content.mensagem",
              "value": "={{ \n  $json.body?.content || \n\n  $json.body?.data?.message?.extendedTextMessage?.text || \n  $json.body?.data?.message?.imageMessage?.caption || \n  $json.body?.data?.message?.conversation || \n  $json?.message?.text || \n  $json?.message?.caption || \n  null \n}}",
              "type": "string"
            },
            {
              "id": "cc7dcfe1-8ad7-4fe8-93ec-8f643c7d08c7",
              "name": "content.tipoMensagem",
              "value": "={{ $json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "2dfc64f4-b222-4ea7-b095-fdd96d9fcb95",
              "name": "content.idMensagem",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "9d947263-3b68-4c63-88ba-ef1b9de22571",
              "name": "empresa.nomeEmpresa",
              "value": "Danilo Meidas",
              "type": "string"
            },
            {
              "id": "076ad2d4-b8ea-440f-9c02-f7e8417a984d",
              "name": "whatsapp.evo.apikey",
              "value": "={{ $json.body.apikey || null }}",
              "type": "string"
            },
            {
              "id": "0c237725-0428-4f1d-bddf-41bd289b3168",
              "name": "whatsapp.evo.server_url",
              "value": "={{ $json.body.server_url || null }}",
              "type": "string"
            },
            {
              "id": "255b9c45-7769-4d09-9c50-61dcdfb7c09d",
              "name": "app.debouncerTime",
              "value": "8",
              "type": "string"
            },
            {
              "id": "196aeb96-5c33-4dd7-9a4f-6bd40765b7fb",
              "name": "doc.id",
              "value": "1Yo4wzv6EnwnjZJ_Ou1dTkKsuA8iDp1xZfADxqAm62LA",
              "type": "string"
            },
            {
              "id": "fc7c5c8f-b505-4a43-ae07-51eea58d6f80",
              "name": "linkPreview",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "e30bbf8c-d5da-4410-b875-8dfe4b301798",
              "name": "Digitando",
              "value": 2400,
              "type": "number"
            },
            {
              "id": "c4f557bd-72f1-4507-8d9d-c2a590eea2b8",
              "name": "content.quoted",
              "value": "={{ $json.body.data.message.conversation }}\n{{ $json.body.data.message.imageMessage.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "08208140-e1e6-47e2-a358-ebe9883837a6",
      "name": "camposIniciais",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        300
      ],
      "notesInFlow": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('Webhook').item.json.body.data.message.speechToText, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "47d6e0fb-26a7-43d4-ad4c-155c55ef15b2",
      "name": "empilhaÁudio",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        920,
        100
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('camposIniciais').item.json.content.mensagem, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "6479c73b-03e7-4794-9da6-56e68846b067",
      "name": "empilhaTexto",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        380,
        300
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## PASSO 3 - DEFINE O TIPO DE MENSAGEM E ORGANIZA PARA O AGENTE",
        "height": 854,
        "width": 1539,
        "color": 7
      },
      "id": "9e903d71-da9b-4e03-9dab-252242db5e59",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "ca274b03-26c9-496c-a020-dff5a0500b6d",
      "name": "espera evolution processar",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        220,
        100
      ],
      "webhookId": "8ae10f5c-5f7c-4288-b75d-e3d415e5798c"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "={{ $json.mediaType }}",
          "mimeType": "=audio/ogg"
        }
      },
      "id": "c2ef3374-63e3-4b98-87da-d308fdb5e228",
      "name": "transforma audio em binario2",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        560,
        100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais').item.json.whatsapp.evo.server_url }}/chat/getBase64FromMediaMessage/{{ $item(\"0\").$node[\"camposIniciais\"].json[\"whatsapp\"][\"evo\"][\"nomeInstancia\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"whatsapp\"][\"evo\"][\"apikey\"] }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"message\": {\n        \"key\": {\n            \"id\": \"{{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"id\"] }}\"\n        }\n    },\n    \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "c599925e-2d22-4b6b-99ba-f74d2b53d289",
      "name": "transforma audio em binary1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        380,
        100
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        740,
        100
      ],
      "id": "d256220e-6e96-4ba4-a317-78137ee1e2b8",
      "name": "transcreve audio2",
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "message",
        "key": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "options": {}
      },
      "id": "be0747a8-85ef-48b4-8129-4b53d559c46b",
      "name": "Obtem",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        720,
        300
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ \n  $json.message.length > 8 \n  ? $('camposIniciais').item.json.content.idMensagem\n  : JSON.parse($json.message.first()).message_id.toString().trim()\n}}",
                    "rightValue": "={{ $('camposIniciais').item.json.content.idMensagem.toString().trim() }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "3ef3fa63-b2fe-4314-a8c9-b035c913424c"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "nada a fazer"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2b9b7794-e8f6-45b5-8021-f59dbb747cb0",
                    "leftValue": "={{ JSON.parse($json.message.last()).timestamp }}",
                    "rightValue": "={{ $now.minus($('camposIniciais').item.json.app.debouncerTime, 'seconds') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "proceder"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "esperar"
        }
      },
      "id": "64e10837-0012-488b-bdfd-5f420424f37d",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1040,
        300
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}"
      },
      "id": "81e60f33-ae8b-408e-9e5b-8cf978cf5b0b",
      "name": "Deleta1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1400,
        300
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "amount": "={{ $('camposIniciais').item.json.app.debouncerTime }}"
      },
      "id": "a541cd98-7795-45c7-904c-c1f6c098b362",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1240,
        420
      ],
      "webhookId": "6e7cf6ee-1256-4be0-965f-a70ee9e26fba"
    },
    {
      "parameters": {},
      "id": "5124464d-e08d-4bad-9db5-abf1da52d422",
      "name": "NoOp.1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1240,
        180
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "suportesorveteiro",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1100,
        300
      ],
      "id": "c0a80be4-4b8b-47ce-a858-1db78bb2c233",
      "name": "Webhook",
      "webhookId": "7d1ee740-2fda-4cfb-87e9-44e385849491"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "9a9b7b13-2c64-49f6-b2d3-8e176bfa993e",
      "name": "UnificaDados",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -180,
        300
      ],
      "notesInFlow": true,
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "id": "e2506140-ae9d-4623-b7e2-95207bebafa1",
      "name": "NoOp.4",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -380,
        380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "aa4d5d29-e6f1-4bce-b5ff-4575b553a077",
              "name": "systemMessageAgente",
              "value": "=<agent>\n  <identity>\n    <name>Dani</name>\n    <persona>suporte técnico dedicado, profissional e humano</persona>\n    <presentation>\n      oi {{(() => {\n        const nome = $json.meta.nomeCliente;\n        return nome.split(' ')[0]; // Retorna a primeira palavra\n      })()}}, aqui é a dani do sorveteiro raiz. este é nosso suporte direto, já salva aí. estou aqui para ajudar.\n    </presentation>\n    <conceal_identity>true</conceal_identity>\n  </identity>\n\n  <start_message>\n    <auto_intro>\n      {{ new Date().getHours() < 12 ? 'bom dia' : (new Date().getHours() < 18 ? 'boa tarde' : 'boa noite') }}, tudo certo? sou da equipe de suporte do edu. antes de acessarmos o conteúdo, preciso confirmar se você é nosso aluno. pode me passar o e‑mail de compra?\n    </auto_intro>\n  </start_message>\n\n  <access_validation>\n    <trigger>\n      <when>aluno enviar email</when>\n      <then>tool_call: getcompra</then>\n    </trigger>\n    <logic>\n      <if user_email=valid AND user_phone=valid>\n        <response>perfeito! verifiquei seu cadastro. estou aqui para ajudar com o curso profissão sorveteiro. qual sua dúvida?</response>\n      </if>\n      <if user_email=valid AND user_phone=invalid>\n        <response>o e‑mail está correto, mas o telefone não confere com o cadastro. precisa atualizar? fale com nosso suporte administrativo no whatsapp [NUMERO_SUPORTE].</response>\n      </if>\n      <if user_email=invalid>\n        <response>não encontrei esse e‑mail em nossa base de alunos. pode conferir e enviar novamente?</response>\n      </if>\n    </logic>\n  </access_validation>\n\n  <!-- REGRA CRÍTICA E INDISPENSÁVEL -->\n  <critical_mandatory_rule>\n    🚨 sempre consultar a ferramenta tool/\"aulas\" antes de cada resposta após a validação inicial. 🚨\n    <enforcement>100% das interações</enforcement>\n    <reason>garantir respostas precisas e alinhadas ao conteúdo do curso</reason>\n    <exception>processo de validação inicial do e‑mail</exception>\n  </critical_mandatory_rule>\n\n  <behaviors>\n    <donts>\n      ⚠️ nunca responder sem antes consultar tool/\"aulas\"  \n      ⚠️ nunca usar maiúsculas — escreva tudo em minúsculas  \n      ⚠️ nunca usar emojis  \n      ⚠️ nunca se apresentar como robô ou IA  \n      ⚠️ nunca dizer \"não sei\" sem indicar próxima ação  \n      ⚠️ nunca acionar getcompra antes de o aluno enviar o e‑mail  \n      ⚠️ nunca iniciar com \"oi, aqui é a IA da dani\"  \n      ⚠️ nunca usar vocabulário técnico demais — linguagem de sorveteiro  \n      ⚠️ nunca esquecer de adaptar a resposta ao nível do aluno  \n      ⚠️ nunca validar por aparência — apenas por dados confirmados  \n      ⚠️ nunca direcionar para outro número sem explicar o motivo  \n      ⚠️ nunca responder sem contexto — se não souber, avise que vai consultar a equipe  \n      ⚠️ nunca escrever textos longos — seja breve e direto\n    </donts>\n\n    <critical_repeats>\n      🚨 sempre consultar tool/\"aulas\" antes de qualquer resposta  \n      ⚠️ mensagens sempre em minúsculas  \n      ⚠️ nunca usar emojis  \n      ⚠️ acionar getcompra somente após o envio do e‑mail pelo aluno  \n      ⚠️ apresentar‑se sempre como dani, nunca como IA  \n      ⚠️ em dúvidas sobre conteúdo, consulte tool/\"aulas\" antes de responder  \n      ⚠️ respostas breves e diretas — sem textos longos\n    </critical_repeats>\n\n    <response_flow>\n      1. receber pergunta do aluno  \n      2. consultar tool/\"aulas\"  \n      3. formular resposta baseada no conteúdo  \n      4. enviar resposta precisa e contextualizada\n    </response_flow>\n\n    <tone>\n      <formality>profissional mas próximo</formality>\n      <style>claro, empático e direto</style>\n      <expressions>perfeito, tranquilo, vamos lá, fico à disposição, qualquer dúvida estou aqui</expressions>\n    </tone>\n\n    <emotional_logic>\n      <handle_frustrated_user>\n        manter a calma, escutar, oferecer solução técnica e reforçar apoio\n      </handle_frustrated_user>\n      <example>entendo sua dificuldade. vamos resolver isso juntos. me conta exatamente o que está acontecendo?</example>\n    </emotional_logic>\n  </behaviors>\n\n  <final_touch>\n    <close_messages>\n      qualquer dúvida, estou aqui  \n      bons estudos e boas produções  \n      conte comigo sempre  \n      fico à disposição\n    </close_messages>\n  </final_touch>\n</agent>",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "7761ab5e-2e81-4f70-b649-478bfae584a0",
      "name": "Prompts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -380,
        200
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\n### Jamais separe uma mensagem vazia.\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do WhatsApp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- _itálico_ (extremamente raro)\n            - `link` (usar sempre em todos os links)\n\nTudo o que for link, deve ser exibido limpo e direto, **sem texto descritivo ou âncoras**, usando somente o domínio puro como: `https://link.com.br/exemplo`\n\n❗ Nunca use markdown no estilo `[texto](link)` ou `Texto (link)`, apenas o link puro.\n\nSe detectar um link com o padrão `www.pay.hotmart.com`, corrija automaticamente para `pay.hotmart.com`, pois o domínio com www não funciona."
            }
          ]
        }
      },
      "id": "2ae5e2bf-7832-41c4-b13a-569c85113e5d",
      "name": "Parser  Chain1",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        2400,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais').item.json.whatsapp.evo.server_url }}/message/sendText/{{ $('camposIniciais').item.json.whatsapp.evo.nomeInstancia }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('camposIniciais').item.json.whatsapp.evo.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $('camposIniciais').item.json.meta.telefoneCliente }}"
            },
            {
              "name": "text",
              "value": "={{ $json.output }}"
            },
            {
              "name": "linkPreview",
              "value": "={{ $('camposIniciais').item.json.linkPreview }}"
            },
            {
              "name": "delay",
              "value": "={{ $('camposIniciais').item.json.Digitando }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "f315eae5-802c-45a1-b6f1-9fe7be965871",
      "name": "Responde texto",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3340,
        380
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "1",
        "contextWindowLength": 30
      },
      "id": "e18cca3e-823f-43bb-8b79-570edb743be7",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.4,
      "position": [
        1780,
        420
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "871489fe-cadd-4964-9e68-13a62af7c2cd",
      "name": "OutputParser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2600,
        400
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "885b608f-35fc-4e88-9259-59acaeeb2788",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2960,
        200
      ]
    },
    {
      "parameters": {
        "amount": 1.2
      },
      "id": "06712632-06d8-4f9e-a3df-2169224cb5a1",
      "name": "1,2s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3520,
        380
      ],
      "webhookId": "e5987401-8b77-4a84-8693-25fd8898cd94"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "6db29d6b-b792-45e4-8a56-8ddcd1f55d81",
      "name": "Segmentos",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2740,
        200
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "7d611434-66bb-49b3-82f6-f4bb725fd1ca",
      "name": "OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2360,
        400
      ],
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "13423af0-8869-4955-899e-b0d29c93342b",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1640,
        420
      ],
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messages').all()[0].json.messages }}",
        "options": {
          "systemMessage": "={{ $('Prompts').item.json.systemMessageAgente }}"
        }
      },
      "id": "01b5ce1b-b7f3-4edd-bf13-d9bd699dddad",
      "name": "Vendedor IA",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1860,
        200
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 3 - DEFINE O TIPO DE MENSAGEM E ORGANIZA PARA O AGENTE",
        "height": 514,
        "width": 619,
        "color": 7
      },
      "id": "dbe384b5-9d66-4298-9cd3-41770d2f5263",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        80
      ]
    },
    {
      "parameters": {
        "content": "## PASSO 3 - DEFINE O TIPO DE MENSAGEM E ORGANIZA PARA O AGENTE",
        "height": 574,
        "width": 1399,
        "color": 7
      },
      "id": "85d41baf-264d-456d-ad3e-10117f1facbf",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2280,
        40
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b7158aa0-84e0-44b1-8629-bf23fb4c0766",
              "name": "=messages",
              "value": "={{ (() => {\n  let messages = '';\n  let quoted = '';\n  let empilha = '';\n  let transcricaoImagem = '';\n  \n  // Primeira parte: join de mensagens\n  try {\n    messages = $json.message.map(buffer => JSON.parse(buffer).message).join('\\n');\n  } catch (e) {\n    messages = '';\n  }\n  \n  // Segunda parte: conteúdo citado (quoted)\n  try {\n    quoted = $('camposIniciais').item.json.content?.quoted || '';\n  } catch (e) {\n    quoted = '';\n  }\n  \n  // Terceira parte: verificar empilhaÁudio se foi executado\n  try {\n    empilha = $node[\"empilhaÁudio\"]?.json?.text || '';\n  } catch (e) {\n    empilha = '';\n  }\n  \n  // Quarta parte: buscar transcrição da imagem\n  try {\n    transcricaoImagem = $('transcreve imagem').item.json.content || '';\n  } catch (e) {\n    transcricaoImagem = '';\n  }\n  \n  // Juntar tudo e remover links do WhatsApp do resultado final\n  let resultado = [messages, quoted, empilha, transcricaoImagem].filter(Boolean).join('\\n\\n');\n  \n  // Remove qualquer link do WhatsApp do resultado final\n  resultado = resultado.replace(/https:\\/\\/mmg\\.whatsapp\\.net\\/[^\\s\\n]+/g, '').trim();\n  \n  // Remove múltiplas quebras de linha consecutivas que podem ter ficado após remover o link\n  resultado = resultado.replace(/\\n\\n+/g, '\\n\\n').trim();\n  \n  return resultado;\n})() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f1d12787-88c2-4528-9ac9-f97cd619777d",
      "name": "messages",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        200
      ]
    },
    {
      "parameters": {},
      "id": "32ccda13-61f7-4ce0-b43e-d05e17926633",
      "name": "NoOp.",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3160,
        120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7ed86f5e-fe26-45b2-ad31-3d42e43a5b82",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3100,
        320
      ],
      "id": "bfeba0ef-f663-4f7f-be8d-1fa8b580baa1",
      "name": "If"
    },
    {
      "parameters": {
        "toolDescription": " sempre consultar antes de gerar qualquer resposta  \n• acionada em 100% das interações após validação inicial do e‑mail  \n\n",
        "method": "POST",
        "url": "https://webhook.sorveteiroraiz.com/webhook/prioridade",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "numero",
              "valueProvider": "fieldValue",
              "value": "={{ $('Switch2').item.json.id }}"
            },
            {
              "name": "resposta",
              "valueProvider": "fieldValue",
              "value": "={{ $('messages').item.json.messages }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        2100,
        420
      ],
      "id": "b3c4d4b8-4e1f-4c3c-9dd3-24418d3770bf",
      "name": "aulas",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "toolDescription": "chame essa função/tool pra verificar se é um email ou telefone valido",
        "method": "POST",
        "url": "https://webhook.sorveteiroraiz.com/webhook/getcompra",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "email"
            },
            {
              "name": "numero",
              "valueProvider": "fieldValue",
              "value": "={{ $('Switch2').item.json.meta.telefoneCliente }}"
            }
          ]
        }
      },
      "id": "9fe26bd5-bc86-45ce-87cd-3f8be9e98bc1",
      "name": "getcompra",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1960,
        420
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {}
      },
      "id": "4301c865-a2ea-4d62-8dd3-6d2b58c1e5ea",
      "name": "converte imagem",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        440,
        600
      ]
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "=<image_analyzer>\n  <identity>\n    <name>analisador visual</name>\n    <persona>analista técnico e detalhista</persona>\n    <style>objetivo, claro e direto</style>\n  </identity>\n  \n  <behaviors>\n    <analysis_flow>\n      <step1>identificar elementos principais da imagem</step1>\n      <step2>descrever contexto e ambiente</step2>\n      <step3>notar detalhes relevantes</step3>\n      <step4>acionar tool \"aulas\" para contexto adicional</step4>\n      <step5>fornecer análise completa e precisa</step5>\n    </analysis_flow>\n    \n    <donts>\n      <rule>nunca inventar elementos que não estão na imagem</rule>\n      <rule>nunca fazer suposições além do visível</rule>\n      <rule>nunca usar termos técnicos desnecessários</rule>\n      <rule>nunca ignorar elementos importantes</rule>\n      <rule>nunca responder sem consultar a ferramenta \"aulas\"</rule>\n    </donts>\n    \n    <critical_rule>\n      ⚠️ sempre acionar a ferramenta tool/\"aulas\" antes de enviar qualquer resposta para garantir informações corretas e eficazes\n    </critical_rule>\n    \n    <response_format>\n      <tone>profissional mas acessível</tone>\n      <structure>organizada e hierárquica</structure>\n      <detail_level>completo mas conciso</detail_level>\n    </response_format>\n  </behaviors>\n  \n  <output_rules>\n    <mandatory>consultar tool \"aulas\" → analisar imagem → resposta contextualizada</mandatory>\n    <format>descrição objetiva com base no conhecimento das aulas</format>\n  </output_rules>\n</image_analyzer>",
        "inputType": "base64",
        "options": {}
      },
      "id": "4807ef07-390e-47e2-99e2-8f7cae20c3bc",
      "name": "transcreve imagem",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        600,
        600
      ],
      "credentials": {
        "openAiApi": {
          "id": "QzQb6Q9G3hGozb9v",
          "name": "OpenAi - Dani 2"
        }
      }
    },
    {
      "parameters": {
        "amount": 10
      },
      "id": "39d5bdde-d1ac-40ea-8bc0-7091e73c003a",
      "name": "espera evolution processar imagem",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        140,
        600
      ],
      "webhookId": "276b709f-7d4b-4233-9e69-254f25485c76"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposIniciais').item.json.meta.telefoneCliente.toString() }}",
        "messageData": "={{ JSON.stringify({ \n    \"message\": $('Webhook').item.json.body.data.message.speechToText, \n    \"timestamp\": $now,\n    \"message_id\": $('camposIniciais').item.json.content.idMensagem\n}) }}",
        "tail": true
      },
      "id": "41ff68f7-5686-4d42-be66-c3632c508954",
      "name": "empilhaÁudio1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        800,
        600
      ],
      "credentials": {
        "redis": {
          "id": "WKYrbj8mpqYSkF5s",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('camposIniciais').item.json.whatsapp.evo.server_url }}/chat/getBase64FromMediaMessage/{{ $item(\"0\").$node[\"camposIniciais\"].json[\"whatsapp\"][\"evo\"][\"nomeInstancia\"] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $item(\"0\").$node[\"camposIniciais\"].json[\"whatsapp\"][\"evo\"][\"apikey\"] }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"message\": {\n        \"key\": {\n            \"id\": \"{{ $item(\"0\").$node[\"Webhook\"].json[\"body\"][\"data\"][\"key\"][\"id\"] }}\"\n        }\n    },\n    \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "13bf0fc6-5ea3-4f33-91a3-20a8c5741db8",
      "name": "Busca imagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        280,
        600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8821ecee-d05b-4cb1-b865-26966db4f3e1",
              "leftValue": "={{ $json.body.data.key.remoteJid }}",
              "rightValue": "5511984151865@s.whatsapp.net",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -920,
        300
      ],
      "id": "ae0fd573-5340-4787-a9c6-107dcf26f814",
      "name": "Ativar para teste"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "webhook.sorveteiroraiz.com",
            "user-agent": "axios/1.7.9",
            "content-length": "954",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "165.22.40.138",
            "x-forwarded-host": "webhook.sorveteiroraiz.com",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "aae19483bb9a",
            "x-real-ip": "165.22.40.138"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "IA_vendas",
            "data": {
              "key": {
                "remoteJid": "5511984151865@s.whatsapp.net",
                "fromMe": false,
                "id": "3EB08A2D5F1C0083938984"
              },
              "pushName": "Higor Leite",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "teste",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "e1vKR32lUxcFiQ==",
                    "senderTimestamp": "1751053220",
                    "senderAccountType": "E2EE",
                    "receiverAccountType": "E2EE",
                    "recipientKeyHash": "EGZvk8KzSFYiaQ==",
                    "recipientTimestamp": "1751637175"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "tWwV1R5s0BU+oLLo9YY0miapZpG8akV4r/RUeQGCTXg="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1751983842,
              "instanceId": "17583f0d-195d-429b-b679-69d097fae1f9",
              "source": "web"
            },
            "destination": "https://webhook.sorveteiroraiz.com/webhook/suportesorveteiro",
            "date_time": "2025-07-08T11:10:42.789Z",
            "sender": "5514996482438@s.whatsapp.net",
            "server_url": "https://evolution.enfermeirolucas.com",
            "apikey": "FEDEF26E1E09-4851-997A-C12ADA1FEE76"
          },
          "webhookUrl": "https://webhook.sorveteiroraiz.com/webhook/suportesorveteiro",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-07-03T16:02:09.110Z",
      "updatedAt": "2025-07-03T16:02:09.110Z",
      "id": "K5MFncsCBrk1389O",
      "name": "IA"
    },
    {
      "createdAt": "2025-07-07T13:19:13.772Z",
      "updatedAt": "2025-07-07T13:19:13.772Z",
      "id": "APWtlgA2UKcKzIN6",
      "name": "Suporte"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-07-08T14:14:55.664Z",
  "versionId": "2841da48-037b-4808-9e0b-dd768df2adef"
}